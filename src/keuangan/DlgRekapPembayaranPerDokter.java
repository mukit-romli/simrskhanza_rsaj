package keuangan;
import fungsi.koneksiDB;
import fungsi.validasi;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import kepegawaian.DlgCariDokter;

public class DlgRekapPembayaranPerDokter extends javax.swing.JDialog {
    private final validasi Valid=new validasi();
    private final Connection koneksi=koneksiDB.condb();
    private DlgCariDokter dokter=new DlgCariDokter(null,false);      
        
    /** Creates new form DlgProgramStudi
     * @param parent
     * @param modal */
    public DlgRekapPembayaranPerDokter(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        HTMLEditorKit kit = new HTMLEditorKit();
        LoadHTML.setEditable(true);
        LoadHTML.setEditorKit(kit);        
        StyleSheet styleSheet = kit.getStyleSheet();
        styleSheet.addRule(
                ".isi td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi2 td{font: 8.5px tahoma;height:12px;background: #ffffff;color:#323232;}"+
                ".isi3 td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
        );
        Document doc = kit.createDefaultDocument();
        LoadHTML.setDocument(doc);       
        
        LoadHTML1.setEditable(true);
        LoadHTML1.setEditorKit(kit);        
//        StyleSheet styleSheet = kit.getStyleSheet();
        styleSheet.addRule(
                ".isi td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi2 td{font: 8.5px tahoma;height:12px;background: #ffffff;color:#323232;}"+
                ".isi3 td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
        );
//        Document doc = kit.createDefaultDocument();
        LoadHTML1.setDocument(doc);       
        
        dokter.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {}
            @Override
            public void windowClosing(WindowEvent e) {}
            @Override
            public void windowClosed(WindowEvent e) {
                if(dokter.getTable().getSelectedRow()!= -1){
                    kddokter.setText(dokter.getTable().getValueAt(dokter.getTable().getSelectedRow(),0).toString());
                    nmdokter.setText(dokter.getTable().getValueAt(dokter.getTable().getSelectedRow(),1).toString());
                }  
                kddokter.requestFocus();
            }
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {dokter.emptTeks();}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });
    }
    private Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();
    private int i=0;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kd2 = new widget.TextBox();
        kddokter = new widget.TextBox();
        internalFrame1 = new widget.InternalFrame();
        panelisi1 = new widget.panelisi();
        label17 = new widget.Label();
        nmdokter = new widget.TextBox();
        btnDokter = new widget.Button();
        label11 = new widget.Label();
        Tgl1 = new widget.Tanggal();
        label18 = new widget.Label();
        Tgl2 = new widget.Tanggal();
        btnCari = new widget.Button();
        label9 = new widget.Label();
        btnCetak = new widget.Button();
        BtnKeluar = new widget.Button();
        TabRawat = new javax.swing.JTabbedPane();
        Scroll = new widget.ScrollPane();
        LoadHTML = new widget.editorpane();
        Scroll1 = new widget.ScrollPane();
        LoadHTML1 = new widget.editorpane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        Kd2.setName("Kd2"); // NOI18N
        Kd2.setPreferredSize(new java.awt.Dimension(207, 23));

        kddokter.setName("kddokter"); // NOI18N
        kddokter.setPreferredSize(new java.awt.Dimension(70, 23));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), " ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label17.setText("Dokter :");
        label17.setName("label17"); // NOI18N
        label17.setPreferredSize(new java.awt.Dimension(50, 23));
        panelisi1.add(label17);

        nmdokter.setEditable(false);
        nmdokter.setName("nmdokter"); // NOI18N
        nmdokter.setPreferredSize(new java.awt.Dimension(230, 23));
        panelisi1.add(nmdokter);

        btnDokter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        btnDokter.setMnemonic('3');
        btnDokter.setToolTipText("Alt+3");
        btnDokter.setName("btnDokter"); // NOI18N
        btnDokter.setPreferredSize(new java.awt.Dimension(28, 23));
        btnDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDokterActionPerformed(evt);
            }
        });
        btnDokter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDokterKeyPressed(evt);
            }
        });
        panelisi1.add(btnDokter);

        label11.setText("Tgl. RVP :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(55, 23));
        panelisi1.add(label11);

        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(85, 23));
        panelisi1.add(Tgl1);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(30, 23));
        panelisi1.add(label18);

        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(85, 23));
        panelisi1.add(Tgl2);

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btnCari.setMnemonic('2');
        btnCari.setText("Cari ");
        btnCari.setToolTipText("Alt+2");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.setPreferredSize(new java.awt.Dimension(70, 23));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });
        panelisi1.add(btnCari);

        label9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(100, 30));
        panelisi1.add(label9);

        btnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        btnCetak.setMnemonic('2');
        btnCetak.setText("Cetak");
        btnCetak.setToolTipText("Alt+2");
        btnCetak.setName("btnCetak"); // NOI18N
        btnCetak.setPreferredSize(new java.awt.Dimension(70, 23));
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        btnCetak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCetakKeyPressed(evt);
            }
        });
        panelisi1.add(btnCetak);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        TabRawat.setBackground(new java.awt.Color(255, 255, 253));
        TabRawat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(241, 246, 236)));
        TabRawat.setForeground(new java.awt.Color(50, 50, 50));
        TabRawat.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        TabRawat.setName("TabRawat"); // NOI18N
        TabRawat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabRawatMouseClicked(evt);
            }
        });

        Scroll.setBorder(null);
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        LoadHTML.setBorder(null);
        LoadHTML.setName("LoadHTML"); // NOI18N
        Scroll.setViewportView(LoadHTML);

        TabRawat.addTab("Rekap Pembayaran Per Pasien", Scroll);

        Scroll1.setBorder(null);
        Scroll1.setName("Scroll1"); // NOI18N
        Scroll1.setOpaque(true);

        LoadHTML1.setBorder(null);
        LoadHTML1.setName("LoadHTML1"); // NOI18N
        Scroll1.setViewportView(LoadHTML1);

        TabRawat.addTab("Rekap Pembayaran Per Bulan", Scroll1);

        internalFrame1.add(TabRawat, java.awt.BorderLayout.CENTER);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/report24.png"))); // NOI18N
        jLabel1.setText("Tabelaris Rekap Pembayaran Per Dokter ");
        jLabel1.setIconTextGap(10);
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);

        internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnKeluar,Tgl1);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        if(TabRawat.getSelectedIndex()==0){
            prosesCari();            
        }else if(TabRawat.getSelectedIndex()==1){
            prosesCari2();
        }
}//GEN-LAST:event_btnCariActionPerformed

private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            btnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, Tgl2, BtnKeluar);
        }
}//GEN-LAST:event_btnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        prosesCari();
    }//GEN-LAST:event_formWindowOpened

    private void TabRawatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabRawatMouseClicked
        if(TabRawat.getSelectedIndex()==0){
            prosesCari();
        }else if(TabRawat.getSelectedIndex()==1){
            prosesCari2();
        }
    }//GEN-LAST:event_TabRawatMouseClicked

    private void btnDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDokterActionPerformed
        dokter.isCek();
        dokter.setSize(internalFrame1.getWidth()-20,internalFrame1.getHeight()-20);
        dokter.setLocationRelativeTo(internalFrame1);
        dokter.setAlwaysOnTop(false);
        dokter.setVisible(true);
    }//GEN-LAST:event_btnDokterActionPerformed

    private void btnDokterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDokterKeyPressed
        //Valid.pindah(evt,DTPCari2,TCari);
    }//GEN-LAST:event_btnDokterKeyPressed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
//        try {
//            // Ambil tanggal dan nama dokter
//            String tglAwal = Valid.SetTgl(Tgl1.getSelectedItem() + "");
//            String tglAkhir = Valid.SetTgl(Tgl2.getSelectedItem() + "");
//            String periode = tglAwal + " s.d " + tglAkhir;
//            String namaDokter = nmdokter.getText();
//
//            // Bungkus ulang HTML dengan header tambahan dan style
//            StringBuilder htmlCetak = new StringBuilder();
//            htmlCetak.append("<html><head><style>")
//                     .append("@page { size: 33.02cm 21.59cm landscape; margin: 1cm; }")
//                     .append("body { font-family: Arial, sans-serif; font-size: 10px; }")
//                     .append("h2, h4 { text-align: center; margin: 0; }")
//                     .append("table { width: 100%; border-collapse: collapse; }")
//                     .append("th { border: 1px solid #999; padding: 4px; text-align: center; }") // semua header center
//                     .append("td { border: 1px solid #999; padding: 4px; }")
//                     .append("td:nth-child(1), td:nth-child(2) { text-align: center; }")
//                     .append("td:nth-child(3), td:nth-child(4) { text-align: left; }")
//                     .append("td:nth-child(n+5):nth-child(-n+20) { text-align: right; }")
//                     .append("</style></head><body>")
//                     .append("<h2>REKAP LAPORAN PEMBAYARAN</h2>")
//                     .append("<h4>Periode : ").append(periode).append("</h4>")
//                     .append("<h4>").append(namaDokter).append("</h4><br>");
//
//            // Tambahkan isi tabel dari LoadHTML
//            htmlCetak.append(LoadHTML.getText());
//
//            htmlCetak.append("</body></html>");
//
//            // Simpan ke file HTML sementara
//            File file = new File("rekap-pembayaran.html");
//            BufferedWriter bw = new BufferedWriter(new FileWriter(file));
//            bw.write(htmlCetak.toString());
//            bw.close();
//
//            // Buka di browser default
//            Desktop desktop = Desktop.getDesktop();
//            if (desktop.isSupported(Desktop.Action.BROWSE)) {
//                desktop.browse(file.toURI());
//            } else {
//                JOptionPane.showMessageDialog(null, "Browser tidak tersedia di sistem ini.");
//            }
//        } catch (IOException e) {
//            JOptionPane.showMessageDialog(null, "Gagal mencetak: " + e.getMessage());
//        }

        try {
            String tglAwal = Valid.SetTgl(Tgl1.getSelectedItem() + "");
            String tglAkhir = Valid.SetTgl(Tgl2.getSelectedItem() + "");
            String periode = tglAwal + " s.d " + tglAkhir;
            String namaDokter = nmdokter.getText();

            // Ambil konten HTML berdasarkan yang aktif
            String isiHTML = "";
            if (LoadHTML.isVisible()) {
                isiHTML = LoadHTML.getText();
            } else if (LoadHTML1.isVisible()) {
                isiHTML = LoadHTML1.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Tidak ada tampilan laporan yang aktif.");
                return;
            }

            // HTML cetak lengkap
            StringBuilder htmlCetak = new StringBuilder();
            htmlCetak.append("<html><head><style>")
                     .append("@page { size: 33.02cm 21.59cm landscape; margin: 1cm; }")
                     .append("body { font-family: Arial, sans-serif; font-size: 10px; }")
                     .append("h2, h4 { text-align: center; margin: 0; }")
                     .append("table { width: 100%; border-collapse: collapse; }")
                     .append("th { border: 1px solid #999; padding: 4px; text-align: center; }")
                     .append("td { border: 1px solid #999; padding: 4px; }")
                     .append("td:nth-child(1), td:nth-child(2) { text-align: center; }")
                     .append("td:nth-child(3), td:nth-child(4) { text-align: left; }")
                     .append("td:nth-child(n+5):nth-child(-n+20) { text-align: right; }")
                     .append("</style></head><body>")
                     .append("<h2>REKAP LAPORAN PEMBAYARAN</h2>")
                     .append("<h4>Periode : ").append(periode).append("</h4>")
                     .append("<h4>").append(namaDokter).append("</h4><br>")
                     .append(isiHTML)
                     .append("</body></html>");

            // Simpan ke file
            File file = new File("rekap-pembayaran.html");
            BufferedWriter bw = new BufferedWriter(new FileWriter(file));
            bw.write(htmlCetak.toString());
            bw.close();

            // Buka file
            Desktop desktop = Desktop.getDesktop();
            if (desktop.isSupported(Desktop.Action.BROWSE)) {
                desktop.browse(file.toURI());
            } else {
                JOptionPane.showMessageDialog(null, "Browser tidak tersedia di sistem ini.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Gagal mencetak: " + e.getMessage());
        }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnCetakKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCetakKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCetakKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgRekapPembayaranPerDokter dialog = new DlgRekapPembayaranPerDokter(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnKeluar;
    private widget.TextBox Kd2;
    private widget.editorpane LoadHTML;
    private widget.editorpane LoadHTML1;
    private widget.ScrollPane Scroll;
    private widget.ScrollPane Scroll1;
    private javax.swing.JTabbedPane TabRawat;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.Button btnCari;
    private widget.Button btnCetak;
    private widget.Button btnDokter;
    private widget.InternalFrame internalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private widget.TextBox kddokter;
    private widget.Label label11;
    private widget.Label label17;
    private widget.Label label18;
    private widget.Label label9;
    private widget.TextBox nmdokter;
    private widget.panelisi panelisi1;
    // End of variables declaration//GEN-END:variables

private void prosesCari() {
    StringBuilder htmlContent = new StringBuilder();

    htmlContent.append(
        "<html><head><style>" +
        "table { border-collapse: collapse; width: 100%; font-family: Arial, sans-serif; }" +        
        "th, td { border: 1px dotted #d3d3d3; padding: 5px; text-align: center; font-size:9px; }" +
        "th { background-color: #f2f2f2; }" +
        "</style></head><body>"
    );
  
    htmlContent.append("<table>");
    htmlContent.append("<thead>");
    htmlContent.append("<tr>" +
        "<th rowspan='2'>No.</th>" +
        "<th rowspan='2'>No.RM</th>" +
        "<th rowspan='2'>Nama Pasien</th>" +
        "<th rowspan='2'>Nama Operasi</th>" +
        "<th rowspan='2'>Biaya RS</th>" +
        "<th rowspan='2'>Paket BPJS</th>" +
        "<th colspan='7'>JASA MEDIK</th>" +
        "<th colspan='4'>PENUNJANG</th>" +
        "<th rowspan='2'>Biaya Operasional RS</th>" +
        "<th rowspan='2'>Total Jasa+ Penunjang</th>" +
        "<th rowspan='2'>Selisih Paket BPJS - Biaya RS</th>" +
        "</tr>");

    htmlContent.append("<tr>" +
        "<th>Konsul & Visite Dokter</th>" +
        "<th>Jasa Operasi</th>" +
        "<th>Alat Medis</th>" +
        "<th>Konsul & Visite Anestesi</th>" +
        "<th>Jasa Anestesi</th>" +
        "<th>Tim OK</th>" +
        "<th>Tim UGD</th>" +
        "<th>Apotik</th>" +
        "<th>Lab</th>" +
        "<th>Radiologi</th>" +
        "<th>Darah PMI</th>" +
        "</tr>");
    htmlContent.append("</thead><tbody>");

    int i = 1;

    double[] total = new double[16]; // untuk menjumlahkan semua nilai numerik per kolom

    try {
        String tgl1 = Valid.SetTgl(Tgl1.getSelectedItem() + "");
        String tgl2 = Valid.SetTgl(Tgl2.getSelectedItem() + "");

                String sql = 
                
                        "SELECT "
                        + "rp.no_rkm_medis, "
                        + "p.nm_pasien, "
                        + "po.nm_perawatan AS nama_operasi, "
                        + "kb.totalpiutang AS biaya_rs, "
                        + "kb.dibayarbpjs AS paket_bpjs, "

                        // KOMONEN OPERASI
                        + "IFNULL(o.biayaoperator1, 0) AS jasa_operasi, "
                        + "IFNULL((SELECT SUM(hargasatuan) FROM beri_obat_operasi WHERE no_rawat=rp.no_rawat AND kd_obat LIKE 'OK%' AND kd_obat NOT IN ('DOK0000','OK00003133')), 0) AS alat_medis, "
                        + "IFNULL(o.biayadokter_anestesi, 0) AS jasa_anestesi, "
                        + "IFNULL(o.biaya_omloop, 0) AS tim_ok, "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=o.dokter_anestesi), 0) AS visite_anestesi, "

                        // KOMONEN PENUNJANG
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=?), 0) AS konsul_visite, "

                        + "("
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_dr WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_drpr WHERE no_rawat=rp.no_rawat AND kd_jenis_prw NOT IN ('RJ94004','RJ94005','ugd004','ugd005')), 0)"
                        + ") AS tim_ugd, "

                        + "IFNULL((SELECT SUM(total) FROM detail_pemberian_obat WHERE no_rawat=rp.no_rawat AND kode_brng NOT LIKE 'B000003106%'), 0) + "
                        + "IFNULL((SELECT SUM(subtotal) FROM detreturjual WHERE no_retur_jual=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(total) FROM resep_pulang WHERE no_rawat=rp.no_rawat), 0) AS obat_total, "
                        + "IFNULL((SELECT SUM(biaya_item) FROM detail_periksa_lab WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya) FROM periksa_lab WHERE no_rawat=rp.no_rawat), 0) AS laboratorium, "
                        + "IFNULL((SELECT SUM(biaya) FROM periksa_radiologi WHERE no_rawat=rp.no_rawat), 0) AS radiologi, "
                        + "IFNULL((SELECT SUM(tb.besar_biaya) FROM tambahan_biaya tb WHERE tb.no_rawat=rp.no_rawat), 0) AS pmi, "

                        // TOTAL PENUNJANG
                        + "("
                        + "IFNULL(o.biayaoperator1, 0) + "
                        + "IFNULL((SELECT SUM(hargasatuan) FROM beri_obat_operasi WHERE no_rawat=rp.no_rawat AND kd_obat LIKE 'OK%' AND kd_obat NOT IN ('DOK0000','OK00003133')), 0) +"
                        + "IFNULL(o.biayadokter_anestesi, 0) + "
                        + "IFNULL(o.biaya_omloop, 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=o.dokter_anestesi), 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=?), 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_dr WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_drpr WHERE no_rawat=rp.no_rawat AND kd_jenis_prw NOT IN ('RJ94004','RJ94005','ugd004','ugd005')), 0) + "
                        + "IFNULL((SELECT SUM(total) FROM detail_pemberian_obat WHERE no_rawat=rp.no_rawat AND kode_brng NOT LIKE 'B000003106%'), 0) + "
                        + "IFNULL((SELECT SUM(subtotal) FROM detreturjual WHERE no_retur_jual=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(total) FROM resep_pulang WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya_item) FROM detail_periksa_lab WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya) FROM periksa_lab WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya) FROM periksa_radiologi WHERE no_rawat=rp.no_rawat), 0) + "                        
                        + "IFNULL((SELECT SUM(besar_biaya) FROM tambahan_biaya WHERE no_rawat=rp.no_rawat), 0)"
                        + ") AS total_jasa_penunjang, "

                        // OPERASIONAL
                        + "("
                        + "kb.totalpiutang - ("
                        + "IFNULL(o.biayaoperator1, 0) + "
                        + "IFNULL((SELECT SUM(hargasatuan) FROM beri_obat_operasi WHERE no_rawat=rp.no_rawat AND kd_obat LIKE 'OK%' AND kd_obat NOT IN ('DOK0000','OK00003133')), 0) + "
                        + "IFNULL(o.biayadokter_anestesi, 0) + "
                        + "IFNULL(o.biaya_omloop, 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=o.dokter_anestesi), 0) + "

                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=?), 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_dr WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_drpr WHERE no_rawat=rp.no_rawat AND kd_jenis_prw NOT IN ('RJ94004','RJ94005','ugd004','ugd005')), 0) + "
                        + "IFNULL((SELECT SUM(total) FROM detail_pemberian_obat WHERE no_rawat=rp.no_rawat AND kode_brng NOT LIKE 'B000003106%'), 0) + "
                        + "IFNULL((SELECT SUM(subtotal) FROM detreturjual WHERE no_retur_jual=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(total) FROM resep_pulang WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya_item) FROM detail_periksa_lab WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya) FROM periksa_lab WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(biaya) FROM periksa_radiologi WHERE no_rawat=rp.no_rawat), 0) + "
                        + "IFNULL((SELECT SUM(besar_biaya) FROM tambahan_biaya WHERE no_rawat=rp.no_rawat), 0)"
                        + ")"
                        + ") AS operasional, "

                        // SELISIH
                        + "(kb.dibayarbpjs - kb.totalpiutang) AS selisih "

                        + "FROM rvp_klaim_bpjs kb "
                        + "JOIN reg_periksa rp ON kb.no_rawat = rp.no_rawat "
                        + "JOIN pasien p ON rp.no_rkm_medis = p.no_rkm_medis "
                        + "LEFT JOIN operasi o ON o.no_rawat = rp.no_rawat "
                        + "LEFT JOIN booking_operasi bo ON bo.no_rawat = rp.no_rawat "
                        + "LEFT JOIN paket_operasi po ON bo.kode_paket = po.kode_paket "
                        + "LEFT JOIN dpjp_ranap dp ON dp.no_rawat = rp.no_rawat "
                        + "WHERE dp.kd_dokter = ? AND kb.tanggal_rvp BETWEEN ? AND ? "
                        + "GROUP BY rp.no_rawat;";

        PreparedStatement ps = koneksi.prepareStatement(sql);
        String kdDokter = kddokter.getText();
        ps.setString(1, kdDokter);
        ps.setString(2, kdDokter);
        ps.setString(3, kdDokter);
        ps.setString(4, kdDokter);
        ps.setString(5, tgl1);
        ps.setString(6, tgl2);

        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            String rowColor = (i % 2 == 0) ? "#f2f2f2" : "#ffffff";
            htmlContent.append("<tr style='background-color:" + rowColor + ";'>");
            htmlContent.append("<td style='text-align:center;'>").append(i).append("</td>");
            htmlContent.append("<td style='text-align:center;'>").append(rs.getString("no_rkm_medis")).append("</td>");
            htmlContent.append("<td style='text-align:left;'>").append(rs.getString("nm_pasien")).append("</td>");
            htmlContent.append("<td style='text-align:left;'>").append(rs.getString("nama_operasi") != null ? rs.getString("nama_operasi") : "-").append("</td>");

            double[] nilaiNumerik = {
                rs.getDouble("biaya_rs"),
                rs.getDouble("paket_bpjs"),
                rs.getDouble("konsul_visite"),
                rs.getDouble("jasa_operasi"),
                rs.getDouble("alat_medis"),
                rs.getDouble("visite_anestesi"),
                rs.getDouble("jasa_anestesi"),
                rs.getDouble("tim_ok"),
                rs.getDouble("tim_ugd"),
                rs.getDouble("obat_total"),
                rs.getDouble("laboratorium"),
                rs.getDouble("radiologi"),
                rs.getDouble("pmi"),
                rs.getDouble("operasional"),
                rs.getDouble("total_jasa_penunjang"),
                rs.getDouble("selisih")
            };

            for (int j = 0; j < nilaiNumerik.length; j++) {
                total[j] += nilaiNumerik[j]; // Akumulasi total
                String style = "text-align:right;";
                if (nilaiNumerik[j] < 0) style += "color:red;";
                htmlContent.append("<td style='" + style + "'>")
                           .append(Valid.SetAngka(nilaiNumerik[j]))
                           .append("</td>");
            }

            htmlContent.append("</tr>");
            i++;
        }

        // Tambahkan baris total
        htmlContent.append("<tr style='background-color:#d9edf7; font-weight:bold;'>");
        htmlContent.append("<td colspan='4' style='text-align:right;'>TOTAL</td>");
        for (int j = 0; j < total.length; j++) {
            String style = "text-align:right;";
            if (total[j] < 0) style += "color:red;";
            htmlContent.append("<td style='" + style + "'>")
                       .append(Valid.SetAngka(total[j]))
                       .append("</td>");
        }
        htmlContent.append("</tr>");

        rs.close();
        ps.close();
    } catch (Exception e) {
        System.out.println("Notif prosesCari: " + e);
    }

    htmlContent.append("</tbody></table>");
    htmlContent.append("</body></html>");
    LoadHTML.setText(htmlContent.toString());
    
    htmlContent.append(
        "<html><head><style>" +
        "table { border-collapse: collapse; width: 100%; font-family: Arial, sans-serif; }" +
        "th, td { border: 1px dotted #d3d3d3; padding: 5px; text-align: center; font-size:9px; }" +
        "th { background-color: #f2f2f2; }" +
        "@page { size: 33.02cm 21.59cm landscape; margin: 1cm; }" + // dibalik: width height
        "body { margin: 0; }" +
        "</style></head><body>"
    );
}

private void prosesCari2() {
    StringBuilder htmlContent = new StringBuilder();

    htmlContent.append(
        "<html><head><style>" +
        "table { border-collapse: collapse; width: 100%; font-family: Arial, sans-serif; }" +        
        "th, td { border: 1px dotted #d3d3d3; padding: 5px; text-align: center; font-size:9px; }" +
        "th { background-color: #f2f2f2; }" +
        "</style></head><body>"
    );
  
    htmlContent.append("<table>");
    htmlContent.append("<thead>");
    htmlContent.append("<tr>" +
        "<th rowspan='2'>No.</th>" +
        "<th rowspan='2'>BULAN</th>" +        
        "<th rowspan='2'>Biaya RS</th>" +
        "<th rowspan='2'>Paket BPJS</th>" +
        "<th colspan='7'>JASA MEDIK</th>" +
        "<th colspan='4'>PENUNJANG</th>" +
        "<th rowspan='2'>Biaya Operasional RS</th>" +
        "<th rowspan='2'>Total Jasa+ Penunjang</th>" +
        "<th rowspan='2'>Selisih Paket BPJS - Biaya RS</th>" +
        "</tr>");

    htmlContent.append("<tr>" +
        "<th>Konsul & Visite Dokter</th>" +
        "<th>Jasa Operasi</th>" +
        "<th>Alat Medis</th>" +
        "<th>Konsul & Visite Anestesi</th>" +
        "<th>Jasa Anestesi</th>" +
        "<th>Tim OK</th>" +
        "<th>Tim UGD</th>" +
        "<th>Apotik</th>" +
        "<th>Lab</th>" +
        "<th>Radiologi</th>" +
        "<th>Darah PMI</th>" +
        "</tr>");
    htmlContent.append("</thead><tbody>");

    int i = 1;

    double[] total = new double[16]; // untuk menjumlahkan semua nilai numerik per kolom

    try {
        String tgl1 = Valid.SetTgl(Tgl1.getSelectedItem() + "");
        String tgl2 = Valid.SetTgl(Tgl2.getSelectedItem() + "");

        String sql = 
                
            "SELECT " +
            "DATE_FORMAT(kb.tanggal_rvp, '%M %Y') AS bulan, " +
            "SUM(kb.totalpiutang) AS biaya_rs, " +
            "SUM(kb.dibayarbpjs) AS paket_bpjs, " +
            "SUM(IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=?),0)) AS konsul_visite, " +
            "SUM(IFNULL(o.biayaoperator1,0)) AS jasa_operasi, " +
            "SUM(IFNULL((SELECT SUM(hargasatuan) FROM beri_obat_operasi WHERE no_rawat=rp.no_rawat AND kd_obat LIKE 'OK%' AND kd_obat NOT IN ('DOK0000','OK00003133')),0)) AS alat_medis, " +
            "SUM(IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=o.dokter_anestesi),0)) AS visite_anestesi, " +
            "SUM(IFNULL(o.biayadokter_anestesi,0)) AS jasa_anestesi, " +
            "SUM(IFNULL(o.biaya_omloop,0)) AS tim_ok, " +
            "SUM(IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_dr WHERE no_rawat=rp.no_rawat),0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_drpr WHERE no_rawat=rp.no_rawat AND kd_jenis_prw NOT IN ('RJ94004','RJ94005','ugd004','ugd005')),0)) AS tim_ugd, " +
            "SUM(IFNULL((SELECT SUM(total) FROM detail_pemberian_obat WHERE no_rawat=rp.no_rawat AND kode_brng NOT LIKE 'B000003106%'),0) + " +
                "IFNULL((SELECT SUM(subtotal) FROM detreturjual WHERE no_retur_jual=rp.no_rawat),0) + " +
                "IFNULL((SELECT SUM(total) FROM resep_pulang WHERE no_rawat=rp.no_rawat),0)) AS obat_total, " +
            "SUM(IFNULL((SELECT SUM(biaya_item) FROM detail_periksa_lab WHERE no_rawat=rp.no_rawat),0) + " +
                "IFNULL((SELECT SUM(biaya) FROM periksa_lab WHERE no_rawat=rp.no_rawat),0)) AS laboratorium, " +
            "SUM(IFNULL((SELECT SUM(biaya) FROM periksa_radiologi WHERE no_rawat=rp.no_rawat),0)) AS radiologi, " +
            "SUM(IFNULL((SELECT SUM(tb.besar_biaya) FROM tambahan_biaya tb WHERE tb.no_rawat=rp.no_rawat),0)) AS pmi, " +
            "SUM(kb.totalpiutang - (" +
                "IFNULL(o.biayaoperator1, 0) + " +
                "IFNULL((SELECT SUM(hargasatuan) FROM beri_obat_operasi WHERE no_rawat=rp.no_rawat AND kd_obat LIKE 'OK%' AND kd_obat NOT IN ('DOK0000','OK00003133')), 0) + " +
                "IFNULL(o.biayadokter_anestesi, 0) + " +
                "IFNULL(o.biaya_omloop, 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=o.dokter_anestesi), 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=?), 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_dr WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_drpr WHERE no_rawat=rp.no_rawat AND kd_jenis_prw NOT IN ('RJ94004','RJ94005','ugd004','ugd005')), 0) + " +
                "IFNULL((SELECT SUM(total) FROM detail_pemberian_obat WHERE no_rawat=rp.no_rawat AND kode_brng NOT LIKE 'B000003106%'), 0) + " +
                "IFNULL((SELECT SUM(subtotal) FROM detreturjual WHERE no_retur_jual=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(total) FROM resep_pulang WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(biaya_item) FROM detail_periksa_lab WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(biaya) FROM periksa_lab WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(biaya) FROM periksa_radiologi WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(besar_biaya) FROM tambahan_biaya WHERE no_rawat=rp.no_rawat), 0))" +
            ") AS operasional, " +
            "SUM(kb.dibayarbpjs - kb.totalpiutang) AS selisih, " +
            "SUM(" +
                "IFNULL(o.biayaoperator1, 0) + " +
                "IFNULL((SELECT SUM(hargasatuan) FROM beri_obat_operasi WHERE no_rawat=rp.no_rawat AND kd_obat LIKE 'OK%' AND kd_obat NOT IN ('DOK0000','OK00003133')), 0) + " +
                "IFNULL(o.biayadokter_anestesi, 0) + " +
                "IFNULL(o.biaya_omloop, 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=o.dokter_anestesi), 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_inap_dr WHERE no_rawat=rp.no_rawat AND kd_dokter=?), 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_dr WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(tarif_tindakandr) FROM rawat_jl_drpr WHERE no_rawat=rp.no_rawat AND kd_jenis_prw NOT IN ('RJ94004','RJ94005','ugd004','ugd005')), 0) + " +
                "IFNULL((SELECT SUM(total) FROM detail_pemberian_obat WHERE no_rawat=rp.no_rawat AND kode_brng NOT LIKE 'B000003106%'), 0) + " +
                "IFNULL((SELECT SUM(subtotal) FROM detreturjual WHERE no_retur_jual=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(total) FROM resep_pulang WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(biaya_item) FROM detail_periksa_lab WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(biaya) FROM periksa_lab WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(biaya) FROM periksa_radiologi WHERE no_rawat=rp.no_rawat), 0) + " +
                "IFNULL((SELECT SUM(besar_biaya) FROM tambahan_biaya WHERE no_rawat=rp.no_rawat), 0)" +
            ") AS total_jasa_penunjang " +
            "FROM rvp_klaim_bpjs kb " +
            "JOIN reg_periksa rp ON kb.no_rawat = rp.no_rawat " +
            "LEFT JOIN operasi o ON o.no_rawat = rp.no_rawat " +
            "LEFT JOIN dpjp_ranap dp ON dp.no_rawat = rp.no_rawat " +
            "WHERE dp.kd_dokter = ? AND kb.tanggal_rvp BETWEEN ? AND ? " +
            "GROUP BY bulan " +
            "ORDER BY STR_TO_DATE(CONCAT('01-', bulan), '%d-%m-%Y');";

        PreparedStatement ps = koneksi.prepareStatement(sql);
        String kdDokter = kddokter.getText();
        ps.setString(1, kdDokter);
        ps.setString(2, kdDokter);
        ps.setString(3, kdDokter);
        ps.setString(4, kdDokter);
        ps.setString(5, tgl1);
        ps.setString(6, tgl2);

        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            String rowColor = (i % 2 == 0) ? "#f2f2f2" : "#ffffff";
            htmlContent.append("<tr style='background-color:" + rowColor + ";'>");
            htmlContent.append("<td style='text-align:center;'>").append(i).append("</td>");
            htmlContent.append("<td style='text-align:center;'>").append(rs.getString("bulan")).append("</td>");
//            htmlContent.append("<td style='text-align:left;'>").append(rs.getString("nm_pasien")).append("</td>");
//            htmlContent.append("<td style='text-align:left;'>").append(rs.getString("nama_operasi") != null ? rs.getString("nama_operasi") : "-").append("</td>");

            double[] nilaiNumerik = {
                rs.getDouble("biaya_rs"),
                rs.getDouble("paket_bpjs"),
                rs.getDouble("konsul_visite"),
                rs.getDouble("jasa_operasi"),
                rs.getDouble("alat_medis"),
                rs.getDouble("visite_anestesi"),
                rs.getDouble("jasa_anestesi"),
                rs.getDouble("tim_ok"),
                rs.getDouble("tim_ugd"),
                rs.getDouble("obat_total"),
                rs.getDouble("laboratorium"),
                rs.getDouble("radiologi"),
                rs.getDouble("pmi"),
                rs.getDouble("operasional"),
                rs.getDouble("total_jasa_penunjang"),
                rs.getDouble("selisih")
            };

            for (int j = 0; j < nilaiNumerik.length; j++) {
                total[j] += nilaiNumerik[j]; // Akumulasi total
                String style = "text-align:right;";
                if (nilaiNumerik[j] < 0) style += "color:red;";
                htmlContent.append("<td style='" + style + "'>")
                           .append(Valid.SetAngka(nilaiNumerik[j]))
                           .append("</td>");
            }

            htmlContent.append("</tr>");
            i++;
        }

        // Tambahkan baris total
        htmlContent.append("<tr style='background-color:#d9edf7; font-weight:bold;'>");
        htmlContent.append("<td colspan='2' style='text-align:right;'>TOTAL</td>");
        for (int j = 0; j < total.length; j++) {
            String style = "text-align:right;";
            if (total[j] < 0) style += "color:red;";
            htmlContent.append("<td style='" + style + "'>")
                       .append(Valid.SetAngka(total[j]))
                       .append("</td>");
        }
        htmlContent.append("</tr>");

        rs.close();
        ps.close();
    } catch (Exception e) {
        System.out.println("Notif prosesCari2: " + e);
    }

    htmlContent.append("</tbody></table>");
    htmlContent.append("</body></html>");
    LoadHTML1.setText(htmlContent.toString());
    
    htmlContent.append(
        "<html><head><style>" +
        "table { border-collapse: collapse; width: 100%; font-family: Arial, sans-serif; }" +
        "th, td { border: 1px dotted #d3d3d3; padding: 5px; text-align: center; font-size:9px; }" +
        "th { background-color: #f2f2f2; }" +
        "@page { size: 33.02cm 21.59cm landscape; margin: 1cm; }" + // dibalik: width height
        "body { margin: 0; }" +
        "</style></head><body>"
    );
}

    
}
    

    

