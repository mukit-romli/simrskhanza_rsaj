/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * DlgLhtBiaya.java
 *
 * Created on 12 Jul 10, 16:21:34
 */
package laporan;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author perpustakaan
 */
public final class DlgRl319CaraBayar extends javax.swing.JDialog {

    private final DefaultTableModel tabMode;
    private Connection koneksi = koneksiDB.condb();
    private sekuel Sequel = new sekuel();
    private validasi Valid = new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private int i = 0; 
            ;

    /**
     * Creates new form DlgLhtBiaya
     *
     * @param parent
     * @param modal
     */
    public DlgRl319CaraBayar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(8, 1);
        setSize(885, 674);

        Object[] rowRwJlDr = {
            "No.","Cara Pembayaran", "Jumlah Pasien Keluar Ranap", "Jumlah Lama Dirawat Ranap", 
            "Jumlah Pasien Rawat Jalan", "Laboratorium", "Radiologi", "Lain-lain"
        };
        tabMode = new DefaultTableModel(null, rowRwJlDr) {
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        tbBangsal.setModel(tabMode);
        //tbBangsal.setDefaultRenderer(Object.class, new WarnaTable(jPanel2.getBackground(),tbBangsal.getBackground()));
        tbBangsal.setPreferredScrollableViewportSize(new Dimension(500, 500));
        tbBangsal.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 7; i++) {
            TableColumn column = tbBangsal.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(40);
            } else if (i == 1) {
                column.setPreferredWidth(270);
            } else if (i == 2) {
                column.setPreferredWidth(170);
            } else if (i == 3) {
                column.setPreferredWidth(170);
            } else if (i == 4) {
                column.setPreferredWidth(160);    
            } else if (i == 5) {
                column.setPreferredWidth(100);     
            } else if (i == 6) {
                column.setPreferredWidth(100);     
            } else if (i == 7) {
                column.setPreferredWidth(100);         
            }    
        }
        tbBangsal.setDefaultRenderer(Object.class, new WarnaTable());

        TCari.setDocument(new batasInput((byte) 100).getKata(TCari));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbBangsal = new widget.Table();
        panelGlass5 = new widget.panelisi();
        label11 = new widget.Label();
        Tgl1 = new widget.Tanggal();
        label18 = new widget.Label();
        Tgl2 = new widget.Tanggal();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        jLabel7 = new widget.Label();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnRL31 = new widget.Button();
        BtnRL32 = new widget.Button();
        BtnRL33 = new widget.Button();
        BtnRL34 = new widget.Button();
        BtnRL35 = new widget.Button();
        BtnRL36 = new widget.Button();
        BtnRL37 = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), " ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbBangsal.setName("tbBangsal"); // NOI18N
        Scroll.setViewportView(tbBangsal);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelGlass5.setName("panelGlass5"); // NOI18N
        panelGlass5.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label11.setText("Tanggal :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass5.add(label11);

        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(90, 23));
        panelGlass5.add(Tgl1);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(25, 23));
        panelGlass5.add(label18);

        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(90, 23));
        panelGlass5.add(Tgl2);

        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(60, 23));
        panelGlass5.add(jLabel6);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(155, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass5.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setToolTipText("Alt+2");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnCari);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnAll);

        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(30, 23));
        panelGlass5.add(jLabel7);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnKeluar);

        internalFrame1.add(panelGlass5, java.awt.BorderLayout.PAGE_END);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/report24.png"))); // NOI18N
        jLabel1.setText("RL 3.19 Cara Bayar ");
        jLabel1.setIconTextGap(10);
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(330, 25));
        jPanel1.add(jLabel1);

        BtnRL31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL31.setMnemonic('2');
        BtnRL31.setText("RL 3.1 Indikator Pelayanan");
        BtnRL31.setToolTipText("Alt+2");
        BtnRL31.setAlignmentY(0.9F);
        BtnRL31.setIconTextGap(8);
        BtnRL31.setName("BtnRL31"); // NOI18N
        BtnRL31.setPreferredSize(new java.awt.Dimension(180, 30));
        BtnRL31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL31ActionPerformed(evt);
            }
        });
        BtnRL31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL31KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL31);

        BtnRL32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL32.setMnemonic('2');
        BtnRL32.setText("RL 3.2 Rawat Inap");
        BtnRL32.setToolTipText("Alt+2");
        BtnRL32.setAlignmentY(0.9F);
        BtnRL32.setIconTextGap(8);
        BtnRL32.setName("BtnRL32"); // NOI18N
        BtnRL32.setPreferredSize(new java.awt.Dimension(140, 30));
        BtnRL32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL32ActionPerformed(evt);
            }
        });
        BtnRL32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL32KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL32);

        BtnRL33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL33.setMnemonic('2');
        BtnRL33.setText("RL 4.2 10 Besar");
        BtnRL33.setToolTipText("Alt+2");
        BtnRL33.setAlignmentY(0.9F);
        BtnRL33.setIconTextGap(8);
        BtnRL33.setName("BtnRL33"); // NOI18N
        BtnRL33.setPreferredSize(new java.awt.Dimension(140, 30));
        BtnRL33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL33ActionPerformed(evt);
            }
        });
        BtnRL33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL33KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL33);

        BtnRL34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL34.setMnemonic('2');
        BtnRL34.setText("RL 4.3 10 Besar");
        BtnRL34.setToolTipText("Alt+2");
        BtnRL34.setAlignmentY(0.9F);
        BtnRL34.setIconTextGap(8);
        BtnRL34.setName("BtnRL34"); // NOI18N
        BtnRL34.setPreferredSize(new java.awt.Dimension(140, 30));
        BtnRL34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL34ActionPerformed(evt);
            }
        });
        BtnRL34.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL34KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL34);

        BtnRL35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL35.setMnemonic('2');
        BtnRL35.setText("RL 5.1 ");
        BtnRL35.setToolTipText("Alt+2");
        BtnRL35.setAlignmentY(0.9F);
        BtnRL35.setIconTextGap(8);
        BtnRL35.setName("BtnRL35"); // NOI18N
        BtnRL35.setPreferredSize(new java.awt.Dimension(80, 30));
        BtnRL35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL35ActionPerformed(evt);
            }
        });
        BtnRL35.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL35KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL35);

        BtnRL36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL36.setMnemonic('2');
        BtnRL36.setText("RL 5.2 ");
        BtnRL36.setToolTipText("Alt+2");
        BtnRL36.setAlignmentY(0.9F);
        BtnRL36.setIconTextGap(8);
        BtnRL36.setName("BtnRL36"); // NOI18N
        BtnRL36.setPreferredSize(new java.awt.Dimension(80, 30));
        BtnRL36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL36ActionPerformed(evt);
            }
        });
        BtnRL36.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL36KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL36);

        BtnRL37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-document (1).png"))); // NOI18N
        BtnRL37.setMnemonic('2');
        BtnRL37.setText("RL 5.3");
        BtnRL37.setToolTipText("Alt+2");
        BtnRL37.setAlignmentY(0.9F);
        BtnRL37.setIconTextGap(8);
        BtnRL37.setName("BtnRL37"); // NOI18N
        BtnRL37.setPreferredSize(new java.awt.Dimension(80, 30));
        BtnRL37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRL37ActionPerformed(evt);
            }
        });
        BtnRL37.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnRL37KeyPressed(evt);
            }
        });
        jPanel1.add(BtnRL37);

        internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if (tabMode.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            //TCari.requestFocus();
        } else if (tabMode.getRowCount() != 0) {

            Map<String, Object> param = new HashMap<>();
            param.put("namars", akses.getnamars());
            param.put("alamatrs", akses.getalamatrs());
            param.put("kotars", akses.getkabupatenrs());
            param.put("propinsirs", akses.getpropinsirs());
            param.put("kontakrs", akses.getkontakrs());
            param.put("emailrs", akses.getemailrs());
            param.put("periode", Tgl1.getSelectedItem() + " s.d. " + Tgl2.getSelectedItem());
            param.put("tanggal", Tgl2.getDate());
            param.put("logo", Sequel.cariGambar("select setting.logo from setting"));
            Sequel.queryu("delete from temporary where temp37='" + akses.getalamatip() + "'");
            for (int r = 0; r < tabMode.getRowCount(); r++) {
                if (!tbBangsal.getValueAt(r, 0).toString().contains(">>")) {
                    Sequel.menyimpan("temporary", "'" + r + "','"
                            + tabMode.getValueAt(r, 0).toString() + "','"
                            + tabMode.getValueAt(r, 1).toString().replaceAll("'", "`") + "','"
                            + tabMode.getValueAt(r, 2).toString() + "','"
                            + tabMode.getValueAt(r, 3).toString() + "','"
                            + tabMode.getValueAt(r, 4).toString() + "','"
                            + tabMode.getValueAt(r, 5).toString() + "','"
                            + tabMode.getValueAt(r, 6).toString() + "','"
                            + tabMode.getValueAt(r, 7).toString() + "','"
                            + tabMode.getValueAt(r, 8).toString() + "','0','0','0','"
                            + tabMode.getValueAt(r, 9).toString() + "','"
                            + tabMode.getValueAt(r, 10).toString() + "','"
                            + tabMode.getValueAt(r, 11).toString() + "','"
                            + tabMode.getValueAt(r, 12).toString() + "','"                                                     
                            + tabMode.getValueAt(r, 13).toString() + "','','','','','','','','','','','','','','','','','','','','" + akses.getalamatip() + "'", "Rekap Nota Pembayaran");
                }
            }

            Valid.MyReportqry("rptRl310.jasper", "report", "::[ Formulir RL 3.10 ]::", "select * from temporary where temporary.temp37='" + akses.getalamatip() + "' order by temporary.no", param);
        }
        this.setCursor(Cursor.getDefaultCursor());
}//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnPrintActionPerformed(null);
        } else {
            //Valid.pindah(evt, BtnHapus, BtnAll);
        }
}//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            dispose();
        } else {
            Valid.pindah(evt, BtnKeluar, TCari);
        }
}//GEN-LAST:event_BtnKeluarKeyPressed

private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
    tampil();
}//GEN-LAST:event_BtnCariActionPerformed

private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        tampil();
        this.setCursor(Cursor.getDefaultCursor());
    } else {
        Valid.pindah(evt, TCari, BtnPrint);
    }
}//GEN-LAST:event_BtnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tampil();
    }//GEN-LAST:event_formWindowOpened

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnAllActionPerformed(null);
        } else {

        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        tampil();

    }//GEN-LAST:event_formWindowActivated

    private void BtnRL31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL31ActionPerformed
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                DlgRl31IndikatorPelayanan RL=new DlgRl31IndikatorPelayanan(null,false);
//                RL.isCek();
                RL.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
                RL.setLocationRelativeTo(internalFrame1);
//                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());
                
                RL.setVisible(true);
                this.setCursor(Cursor.getDefaultCursor());            
    }//GEN-LAST:event_BtnRL31ActionPerformed

    private void BtnRL31KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL31KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL31KeyPressed

    private void BtnRL32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL32ActionPerformed
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                DlgRl32RawatInap RL32=new DlgRl32RawatInap(null,false);
//                RL.isCek();
                RL32.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
                RL32.setLocationRelativeTo(internalFrame1);
//                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());
                
                RL32.setVisible(true);
                this.setCursor(Cursor.getDefaultCursor());     
    }//GEN-LAST:event_BtnRL32ActionPerformed

    private void BtnRL32KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL32KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL32KeyPressed

    private void BtnRL33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL33ActionPerformed
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    DlgRL42_10BesarPenyakitRawatInap RL42=new DlgRL42_10BesarPenyakitRawatInap(null,false);
//                RL.isCek();
    RL42.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
    RL42.setLocationRelativeTo(internalFrame1);
//                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());

    RL42.setVisible(true);
    this.setCursor(Cursor.getDefaultCursor());     
    }//GEN-LAST:event_BtnRL33ActionPerformed

    private void BtnRL33KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL33KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL33KeyPressed

    private void BtnRL34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL34ActionPerformed
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        DlgRL43_10BesarKematianRawatInap RL43=new DlgRL43_10BesarKematianRawatInap(null,false);
    //                RL.isCek();
        RL43.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
        RL43.setLocationRelativeTo(internalFrame1);
    //                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());

        RL43.setVisible(true);
        this.setCursor(Cursor.getDefaultCursor());     
    }//GEN-LAST:event_BtnRL34ActionPerformed

    private void BtnRL34KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL34KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL34KeyPressed

    private void BtnRL35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL35ActionPerformed
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        DlgRL51_MobiditasPasienRawatJalan RL51=new DlgRL51_MobiditasPasienRawatJalan(null,false);
    //                RL.isCek();
        RL51.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
        RL51.setLocationRelativeTo(internalFrame1);
    //                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());

        RL51.setVisible(true);
        this.setCursor(Cursor.getDefaultCursor());     
    }//GEN-LAST:event_BtnRL35ActionPerformed

    private void BtnRL35KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL35KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL35KeyPressed

    private void BtnRL36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL36ActionPerformed
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        DlgRL52_10BesarPenyakitRawatJalan RL52=new DlgRL52_10BesarPenyakitRawatJalan(null,false);
    //                RL.isCek();
        RL52.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
        RL52.setLocationRelativeTo(internalFrame1);
    //                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());

        RL52.setVisible(true);
        this.setCursor(Cursor.getDefaultCursor());     
    }//GEN-LAST:event_BtnRL36ActionPerformed

    private void BtnRL36KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL36KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL36KeyPressed

    private void BtnRL37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRL37ActionPerformed
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    DlgRL53_BesarKunjunganPenyakitRawatJalan RL53=new DlgRL53_BesarKunjunganPenyakitRawatJalan(null,false);
    //                RL.isCek();
        RL53.setSize(internalFrame1.getWidth(),internalFrame1.getHeight());
        RL53.setLocationRelativeTo(internalFrame1);
    //                RL.setNoRm(TNoRw.getText(),DTPCari2.getDate());

        RL53.setVisible(true);
        this.setCursor(Cursor.getDefaultCursor()); 
    }//GEN-LAST:event_BtnRL37ActionPerformed

    private void BtnRL37KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnRL37KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnRL37KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgRl319CaraBayar dialog = new DlgRl319CaraBayar(new javax.swing.JFrame(), true);           
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.Button BtnRL31;
    private widget.Button BtnRL32;
    private widget.Button BtnRL33;
    private widget.Button BtnRL34;
    private widget.Button BtnRL35;
    private widget.Button BtnRL36;
    private widget.Button BtnRL37;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.InternalFrame internalFrame1;
    private javax.swing.JLabel jLabel1;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private javax.swing.JPanel jPanel1;
    private widget.Label label11;
    private widget.Label label18;
    private widget.panelisi panelGlass5;
    private widget.Table tbBangsal;
    // End of variables declaration//GEN-END:variables

public void tampil() {
    try {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Valid.tabelKosong(tabMode);

        KategoriBayarKD_PJ kategoriBayarKD_PJ = new KategoriBayarKD_PJ();

        // Daftar kategori tetap
        String[] kategoriBayar = {
            "Membayar Sendiri", "Asuransi JKN (BPJS Kesehatan)", "Asuransi Pemerintah Daerah (Jamkesda)",
            "Asuransi Pemerintah Lainnya", "Asuransi Swasta", "Keringanan (Cost Sharing)", 
            "Kartu Sehat", "Keterangan Tidak Mampu", "Lain-Lain"
        };

        // HashMap untuk menyimpan hasil query
        Map<String, int[]> hasilQuery = new HashMap<>();
        for (String kategori : kategoriBayar) {
            hasilQuery.put(kategori, new int[]{0, 0, 0, 0, 0, 0});
        }

        // Variabel untuk menyimpan total
        int[] total = new int[6];

        // Memisahkan eksekusi query menjadi fungsi tersendiri
        executeQueryPasienKeluar(hasilQuery, total, kategoriBayarKD_PJ);
        executeQueryLamaDirawat(hasilQuery, total, kategoriBayarKD_PJ);
        executeQueryPasienRawatJalan(hasilQuery, total, kategoriBayarKD_PJ);

        // Menampilkan data ke tabel
        tampilkanDataKeTabel(hasilQuery, total, kategoriBayar);
        
    } catch (Exception e) {
        System.out.println("Notifikasi: " + e);
    } finally {
        if (rs != null) { try { rs.close(); } catch (Exception e) { } }
        if (ps != null) { try { ps.close(); } catch (Exception e) { } }
        this.setCursor(Cursor.getDefaultCursor());
    }
}

// Fungsi untuk eksekusi query pasien keluar
private void executeQueryPasienKeluar(Map<String, int[]> hasilQuery, int[] total, KategoriBayarKD_PJ kategoriBayarKD_PJ) throws SQLException {
    ps = koneksi.prepareStatement(
        "SELECT rp.kd_pj, " +
        "COUNT(CASE " +
        "    WHEN rp.status_lanjut = 'Ranap' AND ki.stts_pulang NOT IN ('pindah kamar', '-') THEN rp.no_rawat " +
        "END) AS jumlah_pasien_keluar " +                  
        "FROM reg_periksa rp " +
        "LEFT JOIN penjab pj ON rp.kd_pj = pj.kd_pj " +
        "INNER JOIN kamar_inap ki ON rp.no_rawat = ki.no_rawat " +
        "WHERE ki.tgl_keluar BETWEEN ? AND ? " +
        "GROUP BY rp.kd_pj"
    );
    ps.setString(1, Valid.SetTgl(Tgl1.getSelectedItem() + ""));
    ps.setString(2, Valid.SetTgl(Tgl2.getSelectedItem() + ""));
    rs = ps.executeQuery();

    while (rs.next()) {
        String kd_pj = rs.getString("kd_pj");
        String kategori = kategoriBayarKD_PJ.getKategoriBayar(kd_pj);

        int[] data = hasilQuery.get(kategori);
        data[0] = rs.getInt("jumlah_pasien_keluar");  // indeks 0: jumlah pasien keluar            
        hasilQuery.put(kategori, data);

        // Menambahkan ke total
        total[0] += data[0];
    }
    rs.close();
    ps.close();
}

// Fungsi untuk eksekusi query lama dirawat
private void executeQueryLamaDirawat(Map<String, int[]> hasilQuery, int[] total, KategoriBayarKD_PJ kategoriBayarKD_PJ) throws SQLException {

    ps = koneksi.prepareStatement(
        "SELECT rp.kd_pj, " +
        "IFNULL( " +
        "    SUM( " +
        "        CASE " +       
        "            WHEN "
//                + "ki.stts_pulang NOT IN ('Pindah Kamar', '-') "
//                + "AND "
                + "ki.tgl_keluar IS NOT NULL THEN " +
        "                GREATEST(DATEDIFF(LEAST(ki.tgl_keluar, ?), GREATEST(ki.tgl_masuk, ?)), 1) " + // hitung lama rawat dengan membatasi tanggal
        "            WHEN ki.tgl_keluar IS NULL THEN " +
        "                DATEDIFF(CURDATE(), GREATEST(ki.tgl_masuk, ?)) " + 
        "            ELSE 0 " +
        "        END " +
        "    ), 0 " +
        ") AS jumlah_lama_dirawat " +
        "FROM kamar_inap ki " +
        "LEFT JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat " +
        "WHERE (ki.tgl_masuk <= ? AND (ki.tgl_keluar >= ? OR ki.tgl_keluar IS NULL)) " +
        "GROUP BY rp.kd_pj"
    );

    ps.setString(1, Valid.SetTgl(Tgl2.getSelectedItem() + "")); // untuk LEAST(ki.tgl_keluar, Tgl2)
    ps.setString(2, Valid.SetTgl(Tgl1.getSelectedItem() + "")); // untuk GREATEST(ki.tgl_masuk, Tgl1)
    ps.setString(3, Valid.SetTgl(Tgl1.getSelectedItem() + "")); // untuk GREATEST(ki.tgl_masuk, Tgl1)
    ps.setString(4, Valid.SetTgl(Tgl2.getSelectedItem() + "")); // untuk ki.tgl_masuk <= Tgl2
    ps.setString(5, Valid.SetTgl(Tgl1.getSelectedItem() + "")); // untuk ki.tgl_keluar >= Tgl1
    rs = ps.executeQuery();

    while (rs.next()) {
        String kd_pj = rs.getString("kd_pj");
        String kategori = kategoriBayarKD_PJ.getKategoriBayar(kd_pj);

        int[] data = hasilQuery.get(kategori);            
        data[1] = rs.getInt("jumlah_lama_dirawat");   // indeks 1: jumlah lama dirawat
        hasilQuery.put(kategori, data);

        // Menambahkan ke total            
        total[1] += data[1];
    }
    rs.close();
    ps.close();
}

// Fungsi untuk eksekusi query pasien rawat jalan, laboratorium, radiologi, lain-lain
private void executeQueryPasienRawatJalan(Map<String, int[]> hasilQuery, int[] total, KategoriBayarKD_PJ kategoriBayarKD_PJ) throws SQLException {
        ps = koneksi.prepareStatement(
        "SELECT rp.kd_pj, " +
        "COUNT(DISTINCT CASE " +
        "    WHEN rp.stts NOT IN ('batal') THEN rp.no_rawat " +
        "END) AS jumlah_pasien_rawat_jalan, " +

        "COUNT(DISTINCT CASE " +
        "    WHEN rp.kd_poli = '17' AND rp.stts NOT IN ('batal') THEN rp.no_rawat " +
        "END) AS laboratorium, " +

        "COUNT(DISTINCT CASE " +
        "    WHEN rp.kd_poli = '18' AND rp.stts NOT IN ('batal') THEN rp.no_rawat " +
        "END) AS radiologi, " +

        "COUNT(DISTINCT CASE " +
        "    WHEN rp.kd_poli NOT IN ('17', '18') AND rp.stts NOT IN ('batal') THEN rp.no_rawat " +
        "END) AS lain_lain " +  
        "FROM reg_periksa rp " +
        "LEFT JOIN penjab pj ON rp.kd_pj = pj.kd_pj " +
        "WHERE rp.tgl_registrasi BETWEEN ? AND ? " +
        "GROUP BY rp.kd_pj"
    );

    ps.setString(1, Valid.SetTgl(Tgl1.getSelectedItem() + ""));
    ps.setString(2, Valid.SetTgl(Tgl2.getSelectedItem() + ""));
    rs = ps.executeQuery();

    while (rs.next()) {
        String kd_pj = rs.getString("kd_pj");
        String kategori = kategoriBayarKD_PJ.getKategoriBayar(kd_pj);

        int[] data = hasilQuery.get(kategori);
        data[2] = rs.getInt("jumlah_pasien_rawat_jalan"); // indeks 2: jumlah pasien rawat jalan
        data[3] = rs.getInt("laboratorium");              // indeks 3: laboratorium
        data[4] = rs.getInt("radiologi");                 // indeks 4: radiologi
        data[5] = rs.getInt("lain_lain");                 // indeks 5: lain-lain
        hasilQuery.put(kategori, data);

        // Menambahkan ke total
        for (int i = 2; i < total.length; i++) {
            total[i] += data[i];
        }
    }
    rs.close();
    ps.close();
}

// Fungsi untuk menampilkan data ke tabel
private void tampilkanDataKeTabel(Map<String, int[]> hasilQuery, int[] total, String[] kategoriBayar) {
    int nomor = 1;
    for (String kategori : kategoriBayar) {
        int[] data = hasilQuery.get(kategori);
        tabMode.addRow(new Object[]{
            nomor++, kategori, data[0], data[1], data[2], data[3], data[4], data[5]
        });
    }

    // Menampilkan total di baris terakhir
    tabMode.addRow(new Object[]{
        "", "Total", total[0], total[1], total[2], total[3], total[4], total[5]
    });
}

public class KategoriBayarKD_PJ {
    // Mapping kd_pj ke kategori bayar
    private final Map<String, String> kategoriBayar = new HashMap<>();

    public KategoriBayarKD_PJ() {
        initKategoriBayar();
    }

    // Inisialisasi kategori berdasarkan kd_pj
    private void initKategoriBayar() {
        // Membayar Sendiri
        kategoriBayar.put("001", "Membayar Sendiri");

        // Asuransi JKN (BPJS Kesehatan)
        String[] bpjsKesehatan = {"002", "018", "153", "154", "155", "157", "165", "167", "183", "184", "186", "194", "301", "A29", "BCI", "BPJ"};
        for (String kd_pj : bpjsKesehatan) {
            kategoriBayar.put(kd_pj, "Asuransi JKN (BPJS Kesehatan)");
        }

        // Asuransi Pemerintah Daerah (Jamkesda)
        kategoriBayar.put("139", "Asuransi Pemerintah Daerah (Jamkesda)");

        // Asuransi Pemerintah Lainnya (contoh penambahan data)
        String[] asuransiPemerintah = {"140", "141", "142","150"}; // Tambahkan kode sesuai kebutuhan
        for (String kd_pj : asuransiPemerintah) {
            kategoriBayar.put(kd_pj, "Asuransi Pemerintah Lainnya");
        }

        // Asuransi Swasta
        String[] asuransiSwasta = {"003", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", "029", "030", "031", "032", "033", "034", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", "050", "052", "055", "056", "057", "058", "059", "060", "148", "161", "171", "179", "189", "193", "196", "198", "199", "203", "210", "213", "220", "228", "A23", "INH", "L11", "L32", "L33", "P10", "P11", "P12", "PLN", "PRI", "s88"};
        for (String kd_pj : asuransiSwasta) {
            kategoriBayar.put(kd_pj, "Asuransi Swasta");
        }
    }

    // Metode untuk mendapatkan kategori berdasarkan kd_pj
    public String getKategoriBayar(String kd_pj) {
        if (kd_pj == null || kd_pj.isEmpty()) {
            System.out.println("Warning: kd_pj kosong atau null");
            return "Lain-Lain";
        }
        String kategori = kategoriBayar.getOrDefault(kd_pj, "Lain-Lain");

        // Debugging untuk mengetahui kd_pj yang tidak ditemukan
        if ("Lain-Lain".equals(kategori)) {
//            System.out.println("Warning: kd_pj tidak ditemukan dalam kategori -> " + kd_pj);
        }

        return kategori;
    }
}
    
}
