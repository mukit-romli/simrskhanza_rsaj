package laporan;
import fungsi.koneksiDB;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;

public class DlgRL42_10BesarPenyakitRawatInap extends javax.swing.JDialog {
    private final validasi Valid=new validasi();
    private final Connection koneksi=koneksiDB.condb();
    private PreparedStatement ps,ps2,ps3;
    private ResultSet rs,rs2,rs3;
    private StringBuilder htmlContent;
    private int hr0s6l=0,hr0s6p=0,hr7s28l=0,hr7s28p=0,hr28s1thl=0,hr28s1thp=0,th1s4l=0,th1s4p=0,th5s14l=0,th5s14p=0,
                th15s24l=0,th15s24p=0,th25s44l=0,th25s44p=0,th45s64l=0,th45s64p=0,lbth65l=0,lbth65p=0,mati=0;
    
    
    
    /** Creates new form DlgProgramStudi
     * @param parent
     * @param modal */
    public DlgRL42_10BesarPenyakitRawatInap(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        HTMLEditorKit kit = new HTMLEditorKit();
        LoadHTML.setEditable(true);
        LoadHTML.setEditorKit(kit);
        LoadHTML1.setEditable(true);
        LoadHTML1.setEditorKit(kit);
        StyleSheet styleSheet = kit.getStyleSheet();
        styleSheet.addRule(
                ".isi td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi2 td{font: 8.5px tahoma;height:12px;background: #ffffff;color:#323232;}"+
                ".isi3 td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
        );
        Document doc = kit.createDefaultDocument();
        LoadHTML.setDocument(doc);
        LoadHTML1.setDocument(doc);
    }
    private Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();
    private int i=0;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kd2 = new widget.TextBox();
        internalFrame1 = new widget.InternalFrame();
        panelisi1 = new widget.panelisi();
        label11 = new widget.Label();
        Tgl1 = new widget.Tanggal();
        label18 = new widget.Label();
        Tgl2 = new widget.Tanggal();
        btnCari = new widget.Button();
        label9 = new widget.Label();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();
        TabRawat = new javax.swing.JTabbedPane();
        Scroll = new widget.ScrollPane();
        LoadHTML = new widget.editorpane();
        Scroll1 = new widget.ScrollPane();
        LoadHTML1 = new widget.editorpane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        Kd2.setName("Kd2"); // NOI18N
        Kd2.setPreferredSize(new java.awt.Dimension(207, 23));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), " ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label11.setText("Tanggal :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(55, 23));
        panelisi1.add(label11);

        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(100, 23));
        panelisi1.add(Tgl1);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(30, 23));
        panelisi1.add(label18);

        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(100, 23));
        panelisi1.add(Tgl2);

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btnCari.setMnemonic('2');
        btnCari.setToolTipText("Alt+2");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });
        panelisi1.add(btnCari);

        label9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(100, 30));
        panelisi1.add(label9);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelisi1.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        TabRawat.setBackground(new java.awt.Color(255, 255, 253));
        TabRawat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(241, 246, 236)));
        TabRawat.setForeground(new java.awt.Color(50, 50, 50));
        TabRawat.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        TabRawat.setName("TabRawat"); // NOI18N
        TabRawat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabRawatMouseClicked(evt);
            }
        });

        Scroll.setBorder(null);
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        LoadHTML.setBorder(null);
        LoadHTML.setName("LoadHTML"); // NOI18N
        Scroll.setViewportView(LoadHTML);

        TabRawat.addTab("Berdasar Tanggal Masuk", Scroll);

        Scroll1.setBorder(null);
        Scroll1.setName("Scroll1"); // NOI18N
        Scroll1.setOpaque(true);

        LoadHTML1.setBorder(null);
        LoadHTML1.setName("LoadHTML1"); // NOI18N
        Scroll1.setViewportView(LoadHTML1);

        TabRawat.addTab("Berdasar Tanggal Keluar", Scroll1);

        internalFrame1.add(TabRawat, java.awt.BorderLayout.CENTER);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/report24.png"))); // NOI18N
        jLabel1.setText("RL 4.2 - 10 Besar Penyakit Rawat Inap ");
        jLabel1.setIconTextGap(10);
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);

        internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            
            File g = new File("file2.css");            
            BufferedWriter bg = new BufferedWriter(new FileWriter(g));
            bg.write(
                    ".isi td{border-right: 1px solid #e2e7dd;font: 11px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                    ".isi2 td{font: 11px tahoma;height:12px;background: #ffffff;color:#323232;}"+                    
                    ".isi3 td{border-right: 1px solid #e2e7dd;font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                    ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
            );
            bg.close();
            
            File f = new File("rl4a.html");            
            BufferedWriter bw = new BufferedWriter(new FileWriter(f));
            if(TabRawat.getSelectedIndex()==0){
                bw.write(LoadHTML.getText().replaceAll("<head>","<head><link href=\"file2.css\" rel=\"stylesheet\" type=\"text/css\" />"+
                            "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"+
                                "<tr class='isi2'>"+
                                    "<td valign='top' align='center'>"+
                                        "<font size='4' face='Tahoma'>"+akses.getnamars()+"</font><br>"+
                                        akses.getalamatrs()+", "+akses.getkabupatenrs()+", "+akses.getpropinsirs()+"<br>"+
                                        akses.getkontakrs()+", E-mail : "+akses.getemailrs()+"<br><br>"+
                                        "<font size='2' face='Tahoma'>DATA KEADAAN MORBIDITAS PASIEN RAWAT INAP RUMAH SAKIT PENYEBAB KECELAKAN<br>PERIODE "+Tgl1.getSelectedItem()+" s.d. "+Tgl2.getSelectedItem()+"<br><br></font>"+        
                                    "</td>"+
                               "</tr>"+
                            "</table>")
                );
                bw.close();
            }else if(TabRawat.getSelectedIndex()==1){
                bw.write(LoadHTML1.getText().replaceAll("<head>","<head><link href=\"file2.css\" rel=\"stylesheet\" type=\"text/css\" />"+
                            "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"+
                                "<tr class='isi2'>"+
                                    "<td valign='top' align='center'>"+
                                        "<font size='4' face='Tahoma'>"+akses.getnamars()+"</font><br>"+
                                        akses.getalamatrs()+", "+akses.getkabupatenrs()+", "+akses.getpropinsirs()+"<br>"+
                                        akses.getkontakrs()+", E-mail : "+akses.getemailrs()+"<br><br>"+
                                        "<font size='2' face='Tahoma'>DATA KEADAAN MORBIDITAS PASIEN RAWAT INAP RUMAH SAKIT PENYEBAB KECELAKAN<br>PERIODE "+Tgl1.getSelectedItem()+" s.d. "+Tgl2.getSelectedItem()+"<br><br></font>"+        
                                    "</td>"+
                               "</tr>"+
                            "</table>")
                );
                bw.close();
            }                
            Desktop.getDesktop().browse(f.toURI());
        } catch (Exception e) {
            System.out.println("Notifikasi : "+e);
        }     
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            Valid.pindah(evt,Tgl2,BtnKeluar);
        }
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnPrint,Tgl1);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        if(TabRawat.getSelectedIndex()==0){
            prosesCari();            
        }else if(TabRawat.getSelectedIndex()==1){
            prosesCari2();
        }
}//GEN-LAST:event_btnCariActionPerformed

private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            btnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, Tgl2, BtnPrint);
        }
}//GEN-LAST:event_btnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        prosesCari();
    }//GEN-LAST:event_formWindowOpened

    private void TabRawatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabRawatMouseClicked
        if(TabRawat.getSelectedIndex()==0){
            prosesCari();
        }else if(TabRawat.getSelectedIndex()==1){
            prosesCari2();
        }
    }//GEN-LAST:event_TabRawatMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgRL42_10BesarPenyakitRawatInap dialog = new DlgRL42_10BesarPenyakitRawatInap(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.TextBox Kd2;
    private widget.editorpane LoadHTML;
    private widget.editorpane LoadHTML1;
    private widget.ScrollPane Scroll;
    private widget.ScrollPane Scroll1;
    private javax.swing.JTabbedPane TabRawat;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.Button btnCari;
    private widget.InternalFrame internalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private widget.Label label11;
    private widget.Label label18;
    private widget.Label label9;
    private widget.panelisi panelisi1;
    // End of variables declaration//GEN-END:variables

//    private void prosesCari() {
//        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//        try {
//            htmlContent = new StringBuilder();
//            htmlContent.append(                             
//                "<tr class='isi'>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='2%' rowspan='3'>No.Urut</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='5%' rowspan='3'>No.Daftar Terperinci</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='18%' rowspan='3'>Golongan Sebab Penyakit</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='55%' colspan='18'>Jumlah Pasien Hidup dan Mati menurut Golongan Umur & Jenis Kelamin</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='10%' colspan='2'>Pasien Keluar (Hidup & Mati) Menurut Jenis Kelamin</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='5%' rowspan='3'>Jumlah Pasien Keluar Hidup (23+24)</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='5%' rowspan='3'>Jumlah Pasien Keluar Mati</td>"+
//                "</tr>"+
//                "<tr class='isi'>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>0-6 hr</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>7-28hr</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>28hr-<1th</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>1-4th</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>5-14th</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>15-24th</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>25-44th</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>45-64th</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>> 65</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' rowspan='2'>LK</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center' rowspan='2'>PR</td>"+
//                "</tr>"+
//                "<tr class='isi'>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
//                "</tr>"+
//                "<tr class='isi'>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>1</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>2</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>3</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>4</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>5</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>6</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>7</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>8</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>9</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>10</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>11</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>12</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>13</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>14</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>15</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>16</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>17</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>18</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>19</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>20</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>21</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>22</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>23</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>24</td>"+
//                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>25</td>"+
//                "</tr>"
//            );            
//            ps=koneksi.prepareStatement("select diagnosa_pasien.kd_penyakit,SUBSTRING(penyakit.nm_penyakit,1,80) as nm_penyakit from diagnosa_pasien inner join penyakit "+
//                    "inner join reg_periksa on diagnosa_pasien.kd_penyakit=penyakit.kd_penyakit and reg_periksa.no_rawat=diagnosa_pasien.no_rawat "+
//                    "where diagnosa_pasien.status='Ranap' and reg_periksa.tgl_registrasi between ? and ? and (left(diagnosa_pasien.kd_penyakit,1)<>'V' or "+
//                    " left(diagnosa_pasien.kd_penyakit,1)<>'W' or left(diagnosa_pasien.kd_penyakit,1)<>'X' or left(diagnosa_pasien.kd_penyakit,1)<>'Y') "+
//                    " group by diagnosa_pasien.kd_penyakit order by diagnosa_pasien.kd_penyakit");
//            try {
//                ps.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
//                ps.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
//                rs=ps.executeQuery();
//                i=1;
//                while(rs.next()){
//                    hr0s6l=0;hr0s6p=0;hr7s28l=0;hr7s28p=0;hr28s1thl=0;hr28s1thp=0;th1s4l=0;th1s4p=0;th5s14l=0;th5s14p=0;
//                    th15s24l=0;th15s24p=0;th25s44l=0;th25s44p=0;th45s64l=0;th45s64p=0;lbth65l=0;lbth65p=0;mati=0;
//                    ps2=koneksi.prepareStatement(
//                            "select diagnosa_pasien.kd_penyakit,reg_periksa.umurdaftar,reg_periksa.sttsumur,pasien.jk "+
//                            "from diagnosa_pasien inner join reg_periksa inner join pasien "+
//                            "on reg_periksa.no_rawat=diagnosa_pasien.no_rawat and reg_periksa.no_rkm_medis=pasien.no_rkm_medis "+
//                            "where diagnosa_pasien.status='Ranap' "+
//                            "and reg_periksa.tgl_registrasi between ? and ? and diagnosa_pasien.kd_penyakit=?");
//                    try {
//                        ps2.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
//                        ps2.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
//                        ps2.setString(3,rs.getString("kd_penyakit"));
//                        rs2=ps2.executeQuery();
//                        while(rs2.next()){
//                            if(rs2.getString("sttsumur").equals("Hr")){
//                                if((rs2.getInt("umurdaftar")>=0)&&(rs2.getInt("umurdaftar")<=6)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        hr0s6l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        hr0s6p++;
//                                    }
//                                }else if((rs2.getInt("umurdaftar")>=7)&&(rs2.getInt("umurdaftar")<=28)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        hr7s28l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        hr7s28p++;
//                                    }
//                                }else if(rs2.getInt("umurdaftar")>28){
//                                    if(rs2.getString("jk").equals("L")){
//                                        hr28s1thl++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        hr28s1thp++;
//                                    }
//                                }
//                            }else if(rs2.getString("sttsumur").equals("Bl")){
//                                if(rs2.getString("jk").equals("L")){
//                                    hr28s1thl++;
//                                }else if(rs2.getString("jk").equals("P")){
//                                    hr28s1thp++;
//                                }
//                            }else if(rs2.getString("sttsumur").equals("Th")){
//                                if((rs2.getInt("umurdaftar")>=0)&&(rs2.getInt("umurdaftar")<=4)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        th1s4l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        th1s4p++;
//                                    }
//                                }else if((rs2.getInt("umurdaftar")>=5)&&(rs2.getInt("umurdaftar")<=14)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        th5s14l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        th5s14p++;
//                                    }
//                                }else if((rs2.getInt("umurdaftar")>=15)&&(rs2.getInt("umurdaftar")<=24)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        th15s24l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        th15s24p++;
//                                    }
//                                }else if((rs2.getInt("umurdaftar")>=25)&&(rs2.getInt("umurdaftar")<=44)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        th25s44l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        th25s44p++;
//                                    }
//                                }else if((rs2.getInt("umurdaftar")>=45)&&(rs2.getInt("umurdaftar")<=64)){
//                                    if(rs2.getString("jk").equals("L")){
//                                        th45s64l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        th45s64p++;
//                                    }
//                                }else if(rs2.getInt("umurdaftar")>=65){
//                                    if(rs2.getString("jk").equals("L")){
//                                        lbth65l++;
//                                    }else if(rs2.getString("jk").equals("P")){
//                                        lbth65p++;
//                                    }
//                                }
//                            }
//                        }
//                    } catch (Exception e) {
//                        System.out.println("laporan.DlgRL4A.prosesCari() 1 : "+e);
//                    } finally{
//                        if(rs2!=null){
//                            rs2.close();
//                        }
//                        if(ps2!=null){
//                            ps2.close();
//                        }
//                    }
//                    
//                    ps3=koneksi.prepareStatement(
//                            "select count(pasien_meninggal.no_rkm_medis) "+
//                            "from diagnosa_pasien inner join reg_periksa inner join pasien inner join pasien_meninggal "+
//                            "on reg_periksa.no_rawat=diagnosa_pasien.no_rawat and reg_periksa.no_rkm_medis=pasien.no_rkm_medis "+
//                            "and pasien_meninggal.no_rkm_medis=pasien.no_rkm_medis where diagnosa_pasien.status='Ranap' "+
//                            "and reg_periksa.tgl_registrasi between ? and ? and diagnosa_pasien.kd_penyakit=? "+
//                            "group by diagnosa_pasien.kd_penyakit");
//                    try {
//                        ps3.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
//                        ps3.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
//                        ps3.setString(3,rs.getString("kd_penyakit"));
//                        rs2=ps3.executeQuery();
//                        while(rs2.next()){
//                            mati=rs2.getInt(1);
//                        }
//                    } catch (Exception e) {
//                        System.out.println("laporan.DlgRL4A.prosesCari() 2 : "+e);
//                    } finally{
//                        if(rs2!=null){
//                            rs2.close();
//                        }
//                        if(ps2!=null){
//                            ps2.close();
//                        }
//                    }
//                    htmlContent.append(
//                        "<tr class='isi'>"+
//                            "<td valign='middle' align='center'>"+i+"</td>"+
//                            "<td valign='middle' align='center'>"+rs.getString("kd_penyakit")+"</td>"+
//                            "<td valign='middle' align='left'>"+rs.getString("nm_penyakit")+"</td>"+
//                            "<td valign='middle' align='center'>"+hr0s6l+"</td>"+
//                            "<td valign='middle' align='center'>"+hr0s6p+"</td>"+
//                            "<td valign='middle' align='center'>"+hr7s28l+"</td>"+
//                            "<td valign='middle' align='center'>"+hr7s28p+"</td>"+
//                            "<td valign='middle' align='center'>"+hr28s1thl+"</td>"+
//                            "<td valign='middle' align='center'>"+hr28s1thp+"</td>"+
//                            "<td valign='middle' align='center'>"+th1s4l+"</td>"+
//                            "<td valign='middle' align='center'>"+th1s4p+"</td>"+
//                            "<td valign='middle' align='center'>"+th5s14l+"</td>"+
//                            "<td valign='middle' align='center'>"+th5s14p+"</td>"+
//                            "<td valign='middle' align='center'>"+th15s24l+"</td>"+
//                            "<td valign='middle' align='center'>"+th15s24p+"</td>"+
//                            "<td valign='middle' align='center'>"+th25s44l+"</td>"+
//                            "<td valign='middle' align='center'>"+th25s44p+"</td>"+
//                            "<td valign='middle' align='center'>"+th45s64l+"</td>"+
//                            "<td valign='middle' align='center'>"+th45s64p+"</td>"+
//                            "<td valign='middle' align='center'>"+lbth65l+"</td>"+
//                            "<td valign='middle' align='center'>"+lbth65p+"</td>"+
//                            "<td valign='middle' align='center'>"+(hr0s6l+hr7s28l+hr28s1thl+th1s4l+th5s14l+th15s24l+th25s44l+th45s64l+lbth65l)+"</td>"+
//                            "<td valign='middle' align='center'>"+(hr0s6p+hr7s28p+hr28s1thp+th1s4p+th5s14p+th15s24p+th25s44p+th45s64p+lbth65p)+"</td>"+
//                            "<td valign='middle' align='center'>"+(hr0s6l+hr7s28l+hr28s1thl+th1s4l+th5s14l+th15s24l+th25s44l+th45s64l+lbth65l+hr0s6p+hr7s28p+hr28s1thp+th1s4p+th5s14p+th15s24p+th25s44p+th45s64p+lbth65p-mati)+"</td>"+
//                            "<td valign='middle' align='center'>"+mati+"</td>"+
//                        "</tr>"
//                    );
//                    i++;
//                }
//            } catch (Exception e) {
//                System.out.println("laporan.DlgRL4A.prosesCari() 3 : "+e);
//            } finally{
//                if(rs!=null){
//                    rs.close();
//                }
//                if(ps!=null){
//                    ps.close();
//                }
//            }
//            LoadHTML.setText(
//                    "<html>"+
//                      "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"+
//                       htmlContent.toString()+
//                      "</table>"+
//                    "</html>");
//        } catch (Exception e) {
//            System.out.println("laporan.DlgRL4A.prosesCari() 5 : "+e);
//        } 
//        this.setCursor(Cursor.getDefaultCursor());
//        
//    }
 
    
//kolom keluar mati sudah terbagi 3    
private void prosesCari() {
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    try {
        htmlContent = new StringBuilder();
        htmlContent.append("<html><body><table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='isi'>");
        htmlContent.append("<tr class='header'>"
            + "<td bgcolor='#F7F7F7' align='center' width='4%' rowspan='2'>No. Urut</td>"
            + "<td bgcolor='#F7F7F7' align='center' width='8%' rowspan='2'>Kelompok ICD-10</td>"
            + "<td bgcolor='#F7F7F7' align='center' rowspan='2'>Kelompok Diagnosa Penyakit</td>"
            + "<td bgcolor='#F7F7F7' align='center' colspan='3'>Jumlah Pasien Hidup dan Mati Menurut Jenis Kelamin</td>"
            + "<td bgcolor='#F7F7F7' align='center' colspan='3'>Jumlah Pasien Keluar Mati</td></tr>");

        htmlContent.append("<tr class='header'>"
            + "<td bgcolor='#F7F7F7' width='7%' align='center'>Laki-laki</td><td bgcolor='#F7F7F7' width='7%' align='center'>Perempuan</td><td bgcolor='#F7F7F7' width='7%' align='center'>Total</td>"
            + "<td bgcolor='#F7F7F7' width='7%' align='center'>Laki-laki</td><td bgcolor='#F7F7F7' width='7%' align='center'>Perempuan</td><td bgcolor='#F7F7F7' width='7%' align='center'>Total</td></tr>");

        String tgl1 = Valid.SetTgl(Tgl1.getSelectedItem() + "");
        String tgl2 = Valid.SetTgl(Tgl2.getSelectedItem() + "");

        String query = "SELECT LEFT(dp.kd_penyakit,3) AS kode_icd, " +
                "SUBSTRING(pyk.nm_penyakit,1,80) AS nama_penyakit, p.jk, " +
                "IFNULL(pm.no_rawat IS NOT NULL, false) AS meninggal " +
                "FROM diagnosa_pasien dp " +
                "INNER JOIN penyakit pyk ON dp.kd_penyakit = pyk.kd_penyakit " +
                "INNER JOIN reg_periksa rp ON dp.no_rawat = rp.no_rawat " +
                "INNER JOIN pasien p ON rp.no_rkm_medis = p.no_rkm_medis " +
                "LEFT JOIN pasien_meninggal pm ON dp.no_rawat = pm.no_rawat " +
                "WHERE dp.status = 'Ranap' AND rp.tgl_registrasi BETWEEN ? AND ? " +
                "AND LEFT(dp.kd_penyakit,1) NOT IN ('V','W','X','Y','R','Z') " +
                "AND dp.kd_penyakit NOT IN ('O80','O82')";

        ps = koneksi.prepareStatement(query);
        ps.setString(1, tgl1);
        ps.setString(2, tgl2);
        rs = ps.executeQuery();

        Map<String, Integer> lakiMap = new HashMap<>();
        Map<String, Integer> perempuanMap = new HashMap<>();
        Map<String, Integer> meninggalLakiMap = new HashMap<>();
        Map<String, Integer> meninggalPerempuanMap = new HashMap<>();
        Map<String, String> namaPenyakitMap = new HashMap<>();

        while (rs.next()) {
            String kode = rs.getString("kode_icd");
            String nama = rs.getString("nama_penyakit");
            String jk = rs.getString("jk");
            boolean meninggal = rs.getBoolean("meninggal");

            if (jk.equals("L")) {
                lakiMap.put(kode, lakiMap.getOrDefault(kode, 0) + 1);
                if (meninggal) {
                    meninggalLakiMap.put(kode, meninggalLakiMap.getOrDefault(kode, 0) + 1);
                }
            } else if (jk.equals("P")) {
                perempuanMap.put(kode, perempuanMap.getOrDefault(kode, 0) + 1);
                if (meninggal) {
                    meninggalPerempuanMap.put(kode, meninggalPerempuanMap.getOrDefault(kode, 0) + 1);
                }
            }

            // Simpan nama penyakit (ambil yang pertama ditemukan)
            if (!namaPenyakitMap.containsKey(kode)) {
                namaPenyakitMap.put(kode, nama);
            }
        }
        rs.close();

        // Hitung total dan sort descending berdasarkan total pasien keluar
        List<String> kodeList = new ArrayList<>(namaPenyakitMap.keySet());
        kodeList.sort((k1, k2) -> {
            int total1 = lakiMap.getOrDefault(k1, 0) + perempuanMap.getOrDefault(k1, 0);
            int total2 = lakiMap.getOrDefault(k2, 0) + perempuanMap.getOrDefault(k2, 0);
            return Integer.compare(total2, total1);
        });

        int noUrut = 1;
        for (String kode : kodeList.stream().limit(10).collect(Collectors.toList())) {
            String nama = namaPenyakitMap.get(kode);
            int laki = lakiMap.getOrDefault(kode, 0);
            int perempuan = perempuanMap.getOrDefault(kode, 0);
            int total = laki + perempuan;

            int meninggalL = meninggalLakiMap.getOrDefault(kode, 0);
            int meninggalP = meninggalPerempuanMap.getOrDefault(kode, 0);
            int meninggalTotal = meninggalL + meninggalP;

            htmlContent.append("<tr class='isi'>"
                + "<td align='center'>" + noUrut++ + "</td>"
                + "<td align='center'>" + kode + "</td>"
                + "<td>" + nama + "</td>"
                + "<td align='center'>" + laki + "</td>"
                + "<td align='center'>" + perempuan + "</td>"
                + "<td align='center'>" + total + "</td>"
                + "<td align='center'>" + meninggalL + "</td>"
                + "<td align='center'>" + meninggalP + "</td>"
                + "<td align='center'>" + meninggalTotal + "</td></tr>");
        }

        htmlContent.append("</table></body></html>");
        LoadHTML.setText(htmlContent.toString());
    } catch (Exception e) {
        System.out.println("Notifikasi prosesCariRL42: " + e);
    }
    this.setCursor(Cursor.getDefaultCursor());
}




// belum terbagi kolom keluar mati    
//private void prosesCari() {
//    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//    try {
//        htmlContent = new StringBuilder();
//        htmlContent.append("<html><body><table border='1' cellspacing='0' cellpadding='3' class='isi'>");
//        htmlContent.append("<tr class='header'>"
//            + "<td align='center' rowspan='3'>No. Urut</td>"
//            + "<td align='center' rowspan='3'>No. Daftar Terperinci</td>"
//            + "<td align='center' rowspan='3'>Golongan Sebab Penyakit</td>"
//            + "<td align='center' colspan='50'>Jumlah Pasien Hidup dan Mati menurut Golongan Umur & Jenis Kelamin</td>"
//            + "<td align='center' colspan='2' rowspan='2'>Pasien Keluar (Hidup & Mati) Menurut Jenis Kelamin</td>"
//            + "<td align='center' rowspan='3'>Jumlah Pasien Keluar Hidup (23+24)</td>"
//            + "<td align='center' rowspan='3'>Jumlah Pasien Keluar Mati</td></tr>");
//        
//        // Header kelompok umur
//        htmlContent.append("<tr class='header'>");
//        String[] umurKelompok = {"<1 jam", "1-23 jam", "1-7 hari", "8-28 hari", "29 hari-<3 bulan", "3-<6 bulan", "6-11 bulan", "1-4 tahun", "5-9 tahun", "10-14 tahun", "15-19 tahun", "20-24 tahun", "25-29 tahun", "30-34 tahun", "35-39 tahun", "40-44 tahun", "45-49 tahun", "50-54 tahun", "55-59 tahun", "60-64 tahun", "65-69 tahun", "70-74 tahun", "75-79 tahun", "80-84 tahun", "≥85 tahun"};
//        for (String kelompok : umurKelompok) {
//            htmlContent.append("<td align='center' colspan='2'>").append(kelompok).append("</td>");
//        }
//        htmlContent.append("</tr>");
//        
//        // Header jenis kelamin (L/P)
//        htmlContent.append("<tr class='header'>");
//        for (int i = 0; i < umurKelompok.length; i++) {
//            htmlContent.append("<td align='center'>L</td><td align='center'>P</td>");
//        }
//        htmlContent.append("<td align='center'>LK</td><td align='center'>PR</td>");
//        htmlContent.append("</tr>");
//
//        String tgl1 = Valid.SetTgl(Tgl1.getSelectedItem() + "");
//        String tgl2 = Valid.SetTgl(Tgl2.getSelectedItem() + "");
//
//        String query = "SELECT dp.kd_penyakit, SUBSTRING(pyk.nm_penyakit, 1, 80) AS nm_penyakit, " +
//                "p.jk, rp.umurdaftar, rp.sttsumur, " +
//                "IFNULL(pm.no_rawat IS NOT NULL, false) AS meninggal " +
//                "FROM diagnosa_pasien dp " +
//                "INNER JOIN penyakit pyk ON dp.kd_penyakit = pyk.kd_penyakit " +
//                "INNER JOIN reg_periksa rp ON dp.no_rawat = rp.no_rawat " +
//                "INNER JOIN pasien p ON rp.no_rkm_medis = p.no_rkm_medis " +
//                "LEFT JOIN pasien_meninggal pm ON dp.no_rawat = pm.no_rawat " +
//                "WHERE dp.status = 'Ranap' AND rp.tgl_registrasi BETWEEN ? AND ? " +
//                "AND LEFT(dp.kd_penyakit, 1) NOT IN ('V','W','X','Y','R') " +
//                "AND dp.kd_penyakit NOT REGEXP '^(Z23|Z24|Z25|Z26|Z27)' ";
//
//        ps = koneksi.prepareStatement(query);
//        ps.setString(1, tgl1);
//        ps.setString(2, tgl2);
//        rs = ps.executeQuery();
//
//        Map<String, int[]> lakiMap = new HashMap<>();
//        Map<String, int[]> perempuanMap = new HashMap<>();
//        Map<String, Integer> totalLakiMap = new HashMap<>();
//        Map<String, Integer> totalPerempuanMap = new HashMap<>();
//        Map<String, Integer> meninggalMap = new HashMap<>();
//        Map<String, String> namaPenyakitMap = new HashMap<>();
//
//        while (rs.next()) {
//            String kode = rs.getString("kd_penyakit");
//            String nama = rs.getString("nm_penyakit");
//            String jk = rs.getString("jk");
//            int umur = rs.getInt("umurdaftar");
//            String sttsUmur = rs.getString("sttsumur");
//            boolean meninggal = rs.getBoolean("meninggal");
//
//            int usiaHari;
//            switch (sttsUmur) {
//                case "Hr":
//                    usiaHari = umur;
//                    break;
//                case "Bl":
//                    usiaHari = umur * 30;
//                    break;
//                case "Th":
//                    usiaHari = umur * 365;
//                    break;
//                default:
//                    usiaHari = -1;
//                    break;
//            }
//
//            int kelompok = KelompokUmurRL41.getIndex(usiaHari);
//            if (kelompok >= 0 && isValidForGender(kode, jk) && isValidForAge(kode, umur, sttsUmur)) {
//                if (jk.equals("L")) {
//                    lakiMap.computeIfAbsent(kode, k -> new int[25])[kelompok]++;
//                    totalLakiMap.put(kode, totalLakiMap.getOrDefault(kode, 0) + 1);
//                } else {
//                    perempuanMap.computeIfAbsent(kode, k -> new int[25])[kelompok]++;
//                    totalPerempuanMap.put(kode, totalPerempuanMap.getOrDefault(kode, 0) + 1);
//                }
//            }
//            if (meninggal) {
//                meninggalMap.put(kode, meninggalMap.getOrDefault(kode, 0) + 1);
//            }
//            namaPenyakitMap.put(kode, nama);
//        }
//        rs.close();
//
//        int noUrut = 1;
//        for (String kode : namaPenyakitMap.keySet()) {
//            String nama = namaPenyakitMap.get(kode);
//            int[] umurLaki = lakiMap.getOrDefault(kode, new int[25]);
//            int[] umurPerempuan = perempuanMap.getOrDefault(kode, new int[25]);
//            int totalLaki = totalLakiMap.getOrDefault(kode, 0);
//            int totalPerempuan = totalPerempuanMap.getOrDefault(kode, 0);
//            int jumlahMati = meninggalMap.getOrDefault(kode, 0);
//
//            htmlContent.append("<tr class='isi'><td align='center'>").append(noUrut++).append("</td><td align='center'>")
//                       .append(kode).append("</td><td>").append(nama).append("</td>");
//            for (int i = 0; i < 25; i++) {
//                htmlContent.append("<td align='center'>").append(umurLaki[i]).append("</td><td align='center'>").append(umurPerempuan[i]).append("</td>");
//            }
//
//            htmlContent.append("<td align='center'>").append(totalLaki).append("</td><td align='center'>")
//                       .append(totalPerempuan).append("</td><td align='center'>")
//                       .append(totalLaki + totalPerempuan).append("</td><td align='center'>")
//                       .append(jumlahMati).append("</td></tr>");
//        }
//
//        htmlContent.append("</table></body></html>");
//        LoadHTML.setText(htmlContent.toString());
//    } catch (Exception e) {
//        System.out.println("Notifikasi prosesCari: " + e);
//    }
//    this.setCursor(Cursor.getDefaultCursor());
//}

//private void prosesCari() {
//    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//    try {
//        htmlContent = new StringBuilder();
//        htmlContent.append("<html><body><table border='1' cellspacing='0' cellpadding='3' class='isi'>");
//        htmlContent.append("<tr class='header'>"
//            + "<td align='center' rowspan='3'>No. Urut</td>"
//            + "<td align='center' rowspan='3'>No. Daftar Terperinci</td>"
//            + "<td align='center' rowspan='3'>Golongan Sebab Penyakit</td>"
//            + "<td align='center' colspan='50'>Jumlah Pasien Hidup dan Mati menurut Golongan Umur & Jenis Kelamin</td>"
//            + "<td align='center' colspan='2' rowspan='2'>Pasien Keluar (Hidup & Mati) Menurut Jenis Kelamin</td>"
//            + "<td align='center' rowspan='3'>Jumlah Pasien Keluar Hidup (23+24)</td>"
//            + "<td align='center' colspan='3'>Jumlah Pasien Keluar Mati</td></tr>");
//        
//        // Header kelompok umur
//        htmlContent.append("<tr class='header'>");
//        String[] umurKelompok = {"<1 jam", "1-23 jam", "1-7 hari", "8-28 hari", "29 hari-<3 bulan", "3-<6 bulan", "6-11 bulan", "1-4 tahun", "5-9 tahun", "10-14 tahun", "15-19 tahun", "20-24 tahun", "25-29 tahun", "30-34 tahun", "35-39 tahun", "40-44 tahun", "45-49 tahun", "50-54 tahun", "55-59 tahun", "60-64 tahun", "65-69 tahun", "70-74 tahun", "75-79 tahun", "80-84 tahun", "≥85 tahun"};
//        for (String kelompok : umurKelompok) {
//            htmlContent.append("<td align='center' colspan='2'>").append(kelompok).append("</td>");
//        }
//        htmlContent.append("</tr>");
//        
//        // Header jenis kelamin (L/P)
//        htmlContent.append("<tr class='header'>");
//        for (int i = 0; i < umurKelompok.length; i++) {
//            htmlContent.append("<td align='center'>L</td><td align='center'>P</td>");
//        }
//        htmlContent.append("<td align='center'>LK</td><td align='center'>PR</td>");
//        htmlContent.append("<td align='center'>Laki-laki</td><td align='center'>Perempuan</td><td align='center'>Total</td>");
//        htmlContent.append("</tr>");
//
//        String tgl1 = Valid.SetTgl(Tgl1.getSelectedItem() + "");
//        String tgl2 = Valid.SetTgl(Tgl2.getSelectedItem() + "");
//
//        String query = "SELECT dp.kd_penyakit, SUBSTRING(pyk.nm_penyakit, 1, 80) AS nm_penyakit, " +
//                "p.jk, rp.umurdaftar, rp.sttsumur, " +
//                "pm.no_rawat IS NOT NULL AS meninggal " +
//                "FROM diagnosa_pasien dp " +
//                "INNER JOIN penyakit pyk ON dp.kd_penyakit = pyk.kd_penyakit " +
//                "INNER JOIN reg_periksa rp ON dp.no_rawat = rp.no_rawat " +
//                "INNER JOIN pasien p ON rp.no_rkm_medis = p.no_rkm_medis " +
//                "LEFT JOIN pasien_meninggal pm ON dp.no_rawat = pm.no_rawat " +
//                "WHERE dp.status = 'Ranap' AND rp.tgl_registrasi BETWEEN ? AND ? " +
//                "AND LEFT(dp.kd_penyakit, 1) NOT IN ('V','W','X','Y','R') " +
//                "AND dp.kd_penyakit NOT REGEXP '^(Z23|Z24|Z25|Z26|Z27)' ";
//
//        ps = koneksi.prepareStatement(query);
//        ps.setString(1, tgl1);
//        ps.setString(2, tgl2);
//        rs = ps.executeQuery();
//
//        Map<String, Integer> lakiMeninggalMap = new HashMap<>();
//        Map<String, Integer> perempuanMeninggalMap = new HashMap<>();
//        Map<String, String> namaPenyakitMap = new HashMap<>();
//        
//        while (rs.next()) {
//            String kode = rs.getString("kd_penyakit");
//            String jk = rs.getString("jk");
//            boolean meninggal = rs.getBoolean("meninggal");
//            
//            if (meninggal) {
//                if (jk.equals("L")) {
//                    lakiMeninggalMap.put(kode, lakiMeninggalMap.getOrDefault(kode, 0) + 1);
//                } else {
//                    perempuanMeninggalMap.put(kode, perempuanMeninggalMap.getOrDefault(kode, 0) + 1);
//                }
//            }
//        }
//        rs.close();
//
//        for (String kode : namaPenyakitMap.keySet()) {
//            int lakiMeninggal = lakiMeninggalMap.getOrDefault(kode, 0);
//            int perempuanMeninggal = perempuanMeninggalMap.getOrDefault(kode, 0);
//            int totalMeninggal = lakiMeninggal + perempuanMeninggal;
//            
//            htmlContent.append("<td align='center'>").append(lakiMeninggal).append("</td><td align='center'>")
//                       .append(perempuanMeninggal).append("</td><td align='center'>")
//                       .append(totalMeninggal).append("</td></tr>");
//        }
//
//        htmlContent.append("</table></body></html>");
//        LoadHTML.setText(htmlContent.toString());
//    } catch (Exception e) {
//        System.out.println("Notifikasi prosesCari: " + e);
//    }
//    this.setCursor(Cursor.getDefaultCursor());
//}
    
    
    private boolean isValidForGender(String kode, String jk) {
        if (kode == null || kode.isEmpty()) return false;
        kode = kode.toUpperCase();

        if (jk.equals("P")) {
            return !(kode.matches("^N4[0-9]|^N5[0-1]") || kode.matches("^C6[0-3]"));
        }
        if (jk.equals("L")) {
            return !(kode.matches("^O.*|^Z3[2-7]|^Z39") || kode.matches("^C5[1-8]"));
        }
        return true;
    }

    private boolean isValidForAge(String kode, int umur, String sttsUmur) {
        if (kode == null || kode.isEmpty()) return false;
        kode = kode.toUpperCase();

        int usiaHari;
            switch (sttsUmur) {
                case "Hr":
                    usiaHari = umur;
                    break;
                case "Bl":
                    usiaHari = umur * 30;
                    break;
                case "Th":
                    usiaHari = umur * 365;
                    break;
                default:
                    usiaHari = -1;
            }


        if (kode.matches("^O.*|^Z3[2-7]|^Z39")) {
            return usiaHari >= 3650 && usiaHari <= 23360; // 10-64 tahun
        } else if (kode.matches("^P.*|^Z38")) {
            return usiaHari >= 0 && usiaHari <= 28; // < 1 jam s.d. 28 hari
        } else if (kode.matches("^Z00\\.1")) {
            return usiaHari >= 0 && usiaHari <= 5110; // <14 tahun
        } else if (kode.matches("^Z3[0-1]")) {
            return usiaHari >= 3650; // mulai 10 tahun ke atas
        }

        return true;
    }

    private void prosesCari2() {
       this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            htmlContent = new StringBuilder();
            htmlContent.append(                             
                "<tr class='isi'>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='2%' rowspan='3'>No.Urut</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='5%' rowspan='3'>No.Daftar Terperinci</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='18%' rowspan='3'>Golongan Sebab Penyakit</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='55%' colspan='18'>Jumlah Pasien Hidup dan Mati menurut Golongan Umur & Jenis Kelamin</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='10%' colspan='2'>Pasien Keluar (Hidup & Mati) Menurut Jenis Kelamin</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='5%' rowspan='3'>Jumlah Pasien Keluar Hidup (23+24)</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' width='5%' colspan='2'>Jumlah Pasien Keluar Mati</td>"+
                "</tr>"+
                "<tr class='isi'>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>0-6 hr</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>7-28hr</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>28hr-<1th</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>1-4th</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>5-14th</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>15-24th</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>25-44th</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>45-64th</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' colspan='2'>> 65</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' rowspan='2'>LK</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center' rowspan='2'>PR</td>"+
                "</tr>"+
                "<tr class='isi'>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>L</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>P</td>"+
                "</tr>"+
                "<tr class='isi'>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>1</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>2</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>3</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>4</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>5</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>6</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>7</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>8</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>9</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>10</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>11</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>12</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>13</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>14</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>15</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>16</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>17</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>18</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>19</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>20</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>21</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>22</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>23</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>24</td>"+
                    "<td valign='middle' bgcolor='#FFFAFA' align='center'>25</td>"+
                "</tr>"
            );            
            ps=koneksi.prepareStatement("select diagnosa_pasien.kd_penyakit,SUBSTRING(penyakit.nm_penyakit,1,80) as nm_penyakit from diagnosa_pasien inner join penyakit "+
                    "inner join reg_periksa inner join kamar_inap on diagnosa_pasien.kd_penyakit=penyakit.kd_penyakit and reg_periksa.no_rawat=diagnosa_pasien.no_rawat "+
                    "and kamar_inap.no_rawat=reg_periksa.no_rawat where diagnosa_pasien.status='Ranap' and diagnosa_pasien.prioritas='1' and "+
                    " kamar_inap.tgl_keluar between ? and ? and (left(diagnosa_pasien.kd_penyakit,1)<>'V' or left(diagnosa_pasien.kd_penyakit,1)<>'W' or "+
                    " left(diagnosa_pasien.kd_penyakit,1)<>'X' or left(diagnosa_pasien.kd_penyakit,1)<>'Y') group by diagnosa_pasien.kd_penyakit order by diagnosa_pasien.kd_penyakit");
            try {
                ps.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                ps.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                rs=ps.executeQuery();
                i=1;
                while(rs.next()){
                    hr0s6l=0;hr0s6p=0;hr7s28l=0;hr7s28p=0;hr28s1thl=0;hr28s1thp=0;th1s4l=0;th1s4p=0;th5s14l=0;th5s14p=0;
                    th15s24l=0;th15s24p=0;th25s44l=0;th25s44p=0;th45s64l=0;th45s64p=0;lbth65l=0;lbth65p=0;mati=0;
                    ps2=koneksi.prepareStatement(
                            "select diagnosa_pasien.kd_penyakit,reg_periksa.umurdaftar,reg_periksa.sttsumur,pasien.jk "+
                            "from diagnosa_pasien inner join reg_periksa inner join pasien inner join kamar_inap "+
                            "on reg_periksa.no_rawat=diagnosa_pasien.no_rawat and reg_periksa.no_rkm_medis=pasien.no_rkm_medis "+
                            "and kamar_inap.no_rawat=reg_periksa.no_rawat where diagnosa_pasien.status='Ranap' "+
                            "and kamar_inap.tgl_keluar between ? and ? and diagnosa_pasien.kd_penyakit=?");
                    try {
                        ps2.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                        ps2.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                        ps2.setString(3,rs.getString("kd_penyakit"));
                        rs2=ps2.executeQuery();
                        while(rs2.next()){
                            if(rs2.getString("sttsumur").equals("Hr")){
                                if((rs2.getInt("umurdaftar")>=0)&&(rs2.getInt("umurdaftar")<=6)){
                                    if(rs2.getString("jk").equals("L")){
                                        hr0s6l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        hr0s6p++;
                                    }
                                }else if((rs2.getInt("umurdaftar")>=7)&&(rs2.getInt("umurdaftar")<=28)){
                                    if(rs2.getString("jk").equals("L")){
                                        hr7s28l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        hr7s28p++;
                                    }
                                }else if(rs2.getInt("umurdaftar")>28){
                                    if(rs2.getString("jk").equals("L")){
                                        hr28s1thl++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        hr28s1thp++;
                                    }
                                }
                            }else if(rs2.getString("sttsumur").equals("Bl")){
                                if(rs2.getString("jk").equals("L")){
                                    hr28s1thl++;
                                }else if(rs2.getString("jk").equals("P")){
                                    hr28s1thp++;
                                }
                            }else if(rs2.getString("sttsumur").equals("Th")){
                                if((rs2.getInt("umurdaftar")>=0)&&(rs2.getInt("umurdaftar")<=4)){
                                    if(rs2.getString("jk").equals("L")){
                                        th1s4l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        th1s4p++;
                                    }
                                }else if((rs2.getInt("umurdaftar")>=5)&&(rs2.getInt("umurdaftar")<=14)){
                                    if(rs2.getString("jk").equals("L")){
                                        th5s14l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        th5s14p++;
                                    }
                                }else if((rs2.getInt("umurdaftar")>=15)&&(rs2.getInt("umurdaftar")<=24)){
                                    if(rs2.getString("jk").equals("L")){
                                        th15s24l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        th15s24p++;
                                    }
                                }else if((rs2.getInt("umurdaftar")>=25)&&(rs2.getInt("umurdaftar")<=44)){
                                    if(rs2.getString("jk").equals("L")){
                                        th25s44l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        th25s44p++;
                                    }
                                }else if((rs2.getInt("umurdaftar")>=45)&&(rs2.getInt("umurdaftar")<=64)){
                                    if(rs2.getString("jk").equals("L")){
                                        th45s64l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        th45s64p++;
                                    }
                                }else if(rs2.getInt("umurdaftar")>=65){
                                    if(rs2.getString("jk").equals("L")){
                                        lbth65l++;
                                    }else if(rs2.getString("jk").equals("P")){
                                        lbth65p++;
                                    }
                                }
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("laporan.DlgRL4A.prosesCari() 1 : "+e);
                    } finally{
                        if(rs2!=null){
                            rs2.close();
                        }
                        if(ps2!=null){
                            ps2.close();
                        }
                    }
                    
                    ps3=koneksi.prepareStatement(
                            "select count(pasien_meninggal.no_rkm_medis) "+
                            "from diagnosa_pasien inner join reg_periksa inner join pasien inner join pasien_meninggal inner join kamar_inap "+
                            "on reg_periksa.no_rawat=diagnosa_pasien.no_rawat and reg_periksa.no_rkm_medis=pasien.no_rkm_medis "+
                            "and pasien_meninggal.no_rkm_medis=pasien.no_rkm_medis where diagnosa_pasien.status='Ranap' and kamar_inap.no_rawat=reg_periksa.no_rawat "+
                            "and kamar_inap.tgl_keluar between ? and ? and diagnosa_pasien.kd_penyakit=? "+
                            "group by diagnosa_pasien.kd_penyakit");
                    try {
                        ps3.setString(1,Valid.SetTgl(Tgl1.getSelectedItem()+""));
                        ps3.setString(2,Valid.SetTgl(Tgl2.getSelectedItem()+""));
                        ps3.setString(3,rs.getString("kd_penyakit"));
                        rs2=ps3.executeQuery();
                        while(rs2.next()){
                            mati=rs2.getInt(1);
                        }
                    } catch (Exception e) {
                        System.out.println("laporan.DlgRL4A.prosesCari() 2 : "+e);
                    } finally{
                        if(rs2!=null){
                            rs2.close();
                        }
                        if(ps2!=null){
                            ps2.close();
                        }
                    }
                    htmlContent.append(
                        "<tr class='isi'>"+
                            "<td valign='middle' align='center'>"+i+"</td>"+
                            "<td valign='middle' align='center'>"+rs.getString("kd_penyakit")+"</td>"+
                            "<td valign='middle' align='left'>"+rs.getString("nm_penyakit")+"</td>"+
                            "<td valign='middle' align='center'>"+hr0s6l+"</td>"+
                            "<td valign='middle' align='center'>"+hr0s6p+"</td>"+
                            "<td valign='middle' align='center'>"+hr7s28l+"</td>"+
                            "<td valign='middle' align='center'>"+hr7s28p+"</td>"+
                            "<td valign='middle' align='center'>"+hr28s1thl+"</td>"+
                            "<td valign='middle' align='center'>"+hr28s1thp+"</td>"+
                            "<td valign='middle' align='center'>"+th1s4l+"</td>"+
                            "<td valign='middle' align='center'>"+th1s4p+"</td>"+
                            "<td valign='middle' align='center'>"+th5s14l+"</td>"+
                            "<td valign='middle' align='center'>"+th5s14p+"</td>"+
                            "<td valign='middle' align='center'>"+th15s24l+"</td>"+
                            "<td valign='middle' align='center'>"+th15s24p+"</td>"+
                            "<td valign='middle' align='center'>"+th25s44l+"</td>"+
                            "<td valign='middle' align='center'>"+th25s44p+"</td>"+
                            "<td valign='middle' align='center'>"+th45s64l+"</td>"+
                            "<td valign='middle' align='center'>"+th45s64p+"</td>"+
                            "<td valign='middle' align='center'>"+lbth65l+"</td>"+
                            "<td valign='middle' align='center'>"+lbth65p+"</td>"+
                            "<td valign='middle' align='center'>"+(hr0s6l+hr7s28l+hr28s1thl+th1s4l+th5s14l+th15s24l+th25s44l+th45s64l+lbth65l)+"</td>"+
                            "<td valign='middle' align='center'>"+(hr0s6p+hr7s28p+hr28s1thp+th1s4p+th5s14p+th15s24p+th25s44p+th45s64p+lbth65p)+"</td>"+
                            "<td valign='middle' align='center'>"+(hr0s6l+hr7s28l+hr28s1thl+th1s4l+th5s14l+th15s24l+th25s44l+th45s64l+lbth65l+hr0s6p+hr7s28p+hr28s1thp+th1s4p+th5s14p+th15s24p+th25s44p+th45s64p+lbth65p-mati)+"</td>"+
                            "<td valign='middle' align='center'>"+mati+"</td>"+
                        "</tr>"
                    );
                    i++;
                }
            } catch (Exception e) {
                System.out.println("laporan.DlgRL4A.prosesCari() 3 : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
            LoadHTML1.setText(
                    "<html>"+
                      "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"+
                       htmlContent.toString()+
                      "</table>"+
                    "</html>");
        } catch (Exception e) {
            System.out.println("laporan.DlgRL4A.prosesCari() 5 : "+e);
        } 
        this.setCursor(Cursor.getDefaultCursor());    
    }
     
private static class KelompokUmurRL41 {
    public static int getIndex(int usiaJam) {
        if (usiaJam < 0) return -1;  // invalid
        if (usiaJam < 1) return 0;   // < 1 jam
        if (usiaJam < 24) return 1;  // 1–23 jam
        if (usiaJam < 7 * 24) return 2;  // 1–7 hari
        if (usiaJam < 28 * 24) return 3; // 8–28 hari
        if (usiaJam < 3 * 30 * 24) return 4; // 29 hari–<3 bulan
        if (usiaJam < 6 * 30 * 24) return 5; // 3–<6 bulan
        if (usiaJam < 12 * 30 * 24) return 6; // 6–11 bulan
        if (usiaJam < 5 * 365 * 24) return 7; // 1–4 tahun
        if (usiaJam < 10 * 365 * 24) return 8; // 5–9 tahun
        if (usiaJam < 15 * 365 * 24) return 9; // 10–14 tahun
        if (usiaJam < 20 * 365 * 24) return 10; // 15–19 tahun
        if (usiaJam < 25 * 365 * 24) return 11; // 20–24 tahun
        if (usiaJam < 30 * 365 * 24) return 12; // 25–29 tahun
        if (usiaJam < 35 * 365 * 24) return 13; // 30–34 tahun
        if (usiaJam < 40 * 365 * 24) return 14; // 35–39 tahun
        if (usiaJam < 45 * 365 * 24) return 15; // 40–44 tahun
        if (usiaJam < 50 * 365 * 24) return 16; // 45–49 tahun
        if (usiaJam < 55 * 365 * 24) return 17; // 50–54 tahun
        if (usiaJam < 60 * 365 * 24) return 18; // 55–59 tahun
        if (usiaJam < 65 * 365 * 24) return 19; // 60–64 tahun
        if (usiaJam < 70 * 365 * 24) return 20; // 65–69 tahun
        if (usiaJam < 75 * 365 * 24) return 21; // 70–74 tahun
        if (usiaJam < 80 * 365 * 24) return 22; // 75–79 tahun
        if (usiaJam < 85 * 365 * 24) return 23; // 80–84 tahun
        return 24; // ≥85 tahun
    }
}






    
    public void isCek(){
        BtnPrint.setEnabled(akses.getrl4asebab());
    }
    
}
    

    

