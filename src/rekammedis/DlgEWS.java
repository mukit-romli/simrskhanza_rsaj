package rekammedis;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JPanel;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

public class DlgEWS extends javax.swing.JDialog {
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private Connection koneksi=koneksiDB.condb();
    private PreparedStatement ps,ps2;
    private ResultSet rs,rs2;
    private int i=0;
    private String noRawat="";
    
    /** Creates new form DlgProgramStudi
     * @param parent
     * @param modal */
    public DlgEWS(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         setSize(1285,674);
        
        HTMLEditorKit kit = new HTMLEditorKit();
        LoadHTML.setEditable(true);
        LoadHTML.setEditorKit(kit);
        LoadHTML.setEditable(true);
        LoadHTML.setEditorKit(kit);
        StyleSheet styleSheet = kit.getStyleSheet();
        styleSheet.addRule(
                ".isi td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi2 td{font: 8.5px tahoma;height:12px;background: #ffffff;color:#323232;}"+
                ".isi3 td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
        );
        Document doc = kit.createDefaultDocument();
        LoadHTML.setDocument(doc);
        LoadHTML.setDocument(doc);
    }
    private Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kd2 = new widget.TextBox();
        internalFrame1 = new widget.InternalFrame();
        PanelInput = new javax.swing.JPanel();
        TabRawat = new javax.swing.JTabbedPane();
        internalFrame2 = new widget.InternalFrame();
        Suhu = new widget.ScrollPane();
        jPanelSuhu = new javax.swing.JPanel();
        internalFrame4 = new widget.InternalFrame();
        SpO2 = new widget.ScrollPane();
        jPanelSpO2 = new javax.swing.JPanel();
        internalFrame5 = new widget.InternalFrame();
        Tensi = new widget.ScrollPane();
        jPanelTensi = new javax.swing.JPanel();
        internalFrame7 = new widget.InternalFrame();
        Bc = new widget.ScrollPane();
        jPanelBc = new javax.swing.JPanel();
        internalFrame8 = new widget.InternalFrame();
        Nadi = new widget.ScrollPane();
        jPanelNadi = new javax.swing.JPanel();
        internalFrame6 = new widget.InternalFrame();
        Skor = new widget.ScrollPane();
        jPanelSkor = new javax.swing.JPanel();
        ChkInput = new widget.CekBox();
        panelisi1 = new widget.panelisi();
        label11 = new widget.Label();
        Tgl1 = new widget.Tanggal();
        label18 = new widget.Label();
        Tgl2 = new widget.Tanggal();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        btnCari = new widget.Button();
        BtnAll = new widget.Button();
        label9 = new widget.Label();
        BtnPrint = new widget.Button();
        BtnKeluar = new widget.Button();
        Scroll = new widget.ScrollPane();
        LoadHTML = new widget.editorpane();

        Kd2.setName("Kd2"); // NOI18N
        Kd2.setPreferredSize(new java.awt.Dimension(207, 23));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Early Warning Score ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        PanelInput.setName("PanelInput"); // NOI18N
        PanelInput.setOpaque(false);
        PanelInput.setPreferredSize(new java.awt.Dimension(192, 330));
        PanelInput.setLayout(new java.awt.BorderLayout(1, 1));

        TabRawat.setBackground(new java.awt.Color(254, 255, 254));
        TabRawat.setForeground(new java.awt.Color(50, 50, 50));
        TabRawat.setName("TabRawat"); // NOI18N

        internalFrame2.setBorder(null);
        internalFrame2.setName("internalFrame2"); // NOI18N
        internalFrame2.setLayout(new java.awt.BorderLayout(1, 1));

        Suhu.setName("Suhu"); // NOI18N
        Suhu.setOpaque(true);

        jPanelSuhu.setName("jPanelSuhu"); // NOI18N
        Suhu.setViewportView(jPanelSuhu);

        internalFrame2.add(Suhu, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("Suhu", internalFrame2);

        internalFrame4.setBorder(null);
        internalFrame4.setName("internalFrame4"); // NOI18N
        internalFrame4.setLayout(new java.awt.BorderLayout(1, 1));

        SpO2.setName("SpO2"); // NOI18N
        SpO2.setOpaque(true);

        jPanelSpO2.setName("jPanelSpO2"); // NOI18N
        SpO2.setViewportView(jPanelSpO2);

        internalFrame4.add(SpO2, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("SpO2", internalFrame4);

        internalFrame5.setBorder(null);
        internalFrame5.setName("internalFrame5"); // NOI18N
        internalFrame5.setLayout(new java.awt.BorderLayout(1, 1));

        Tensi.setName("Tensi"); // NOI18N
        Tensi.setOpaque(true);

        jPanelTensi.setName("jPanelTensi"); // NOI18N
        Tensi.setViewportView(jPanelTensi);

        internalFrame5.add(Tensi, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("Sistole / Diastole", internalFrame5);

        internalFrame7.setBorder(null);
        internalFrame7.setName("internalFrame7"); // NOI18N
        internalFrame7.setLayout(new java.awt.BorderLayout(1, 1));

        Bc.setName("Bc"); // NOI18N
        Bc.setOpaque(true);

        jPanelBc.setName("jPanelBc"); // NOI18N
        Bc.setViewportView(jPanelBc);

        internalFrame7.add(Bc, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("Balance Cairan", internalFrame7);

        internalFrame8.setBorder(null);
        internalFrame8.setName("internalFrame8"); // NOI18N
        internalFrame8.setLayout(new java.awt.BorderLayout(1, 1));

        Nadi.setName("Nadi"); // NOI18N
        Nadi.setOpaque(true);

        jPanelNadi.setName("jPanelNadi"); // NOI18N
        Nadi.setViewportView(jPanelNadi);

        internalFrame8.add(Nadi, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("Denyut Jantung", internalFrame8);

        internalFrame6.setBorder(null);
        internalFrame6.setName("internalFrame6"); // NOI18N
        internalFrame6.setLayout(new java.awt.BorderLayout(1, 1));

        Skor.setName("Skor"); // NOI18N
        Skor.setOpaque(true);

        jPanelSkor.setName("jPanelSkor"); // NOI18N
        Skor.setViewportView(jPanelSkor);

        internalFrame6.add(Skor, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("Skor EWS", internalFrame6);

        PanelInput.add(TabRawat, java.awt.BorderLayout.CENTER);

        ChkInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/143.png"))); // NOI18N
        ChkInput.setMnemonic('I');
        ChkInput.setText(".: Tampilkan Grafik ");
        ChkInput.setToolTipText("Alt+I");
        ChkInput.setBorderPainted(true);
        ChkInput.setBorderPaintedFlat(true);
        ChkInput.setFocusable(false);
        ChkInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ChkInput.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkInput.setName("ChkInput"); // NOI18N
        ChkInput.setPreferredSize(new java.awt.Dimension(192, 20));
        ChkInput.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/143.png"))); // NOI18N
        ChkInput.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/145.png"))); // NOI18N
        ChkInput.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/145.png"))); // NOI18N
        ChkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkInputActionPerformed(evt);
            }
        });
        PanelInput.add(ChkInput, java.awt.BorderLayout.PAGE_END);

        internalFrame1.add(PanelInput, java.awt.BorderLayout.PAGE_START);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label11.setText("Tanggal :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(55, 23));
        panelisi1.add(label11);

        Tgl1.setDisplayFormat("dd-MM-yyyy");
        Tgl1.setName("Tgl1"); // NOI18N
        Tgl1.setPreferredSize(new java.awt.Dimension(95, 23));
        panelisi1.add(Tgl1);

        label18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label18.setText("s.d.");
        label18.setName("label18"); // NOI18N
        label18.setPreferredSize(new java.awt.Dimension(30, 23));
        panelisi1.add(label18);

        Tgl2.setDisplayFormat("dd-MM-yyyy");
        Tgl2.setName("Tgl2"); // NOI18N
        Tgl2.setPreferredSize(new java.awt.Dimension(95, 23));
        panelisi1.add(Tgl2);

        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi1.add(jLabel6);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(160, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelisi1.add(TCari);

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btnCari.setMnemonic('2');
        btnCari.setToolTipText("Alt+2");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });
        panelisi1.add(btnCari);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelisi1.add(BtnAll);

        label9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(20, 30));
        panelisi1.add(label9);

        BtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnPrint.setMnemonic('T');
        BtnPrint.setText("Cetak");
        BtnPrint.setToolTipText("Alt+T");
        BtnPrint.setName("BtnPrint"); // NOI18N
        BtnPrint.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        BtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnPrintKeyPressed(evt);
            }
        });
        panelisi1.add(BtnPrint);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        LoadHTML.setBorder(null);
        LoadHTML.setName("LoadHTML"); // NOI18N
        Scroll.setViewportView(LoadHTML);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            
            File g = new File("file2.css");            
            BufferedWriter bg = new BufferedWriter(new FileWriter(g));
            bg.write(
                    ".isi td{border-right: 1px solid #e2e7dd;font: 11px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                    ".isi2 td{font: 11px tahoma;height:12px;background: #ffffff;color:#323232;}"+                    
                    ".isi3 td{border-right: 1px solid #e2e7dd;font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                    ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
            );
            bg.close();
            
            File f = new File("HarianKlasifikasi.html");            
            BufferedWriter bw = new BufferedWriter(new FileWriter(f));            
            bw.write(LoadHTML.getText().replaceAll("<head>","<head><link href=\"file2.css\" rel=\"stylesheet\" type=\"text/css\" />"+
                        "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"+
                            "<tr class='isi2'>"+
                                "<td valign='top' align='center'>"+
                                    "<font size='4' face='Tahoma'>"+akses.getnamars()+"</font><br>"+
                                    akses.getalamatrs()+", "+akses.getkabupatenrs()+", "+akses.getpropinsirs()+"<br>"+
                                    akses.getkontakrs()+", E-mail : "+akses.getemailrs()+"<br><br>"+       
                                "</td>"+
                           "</tr>"+
                        "</table>")
            );
            bw.close();                         
            Desktop.getDesktop().browse(f.toURI());
        } catch (Exception e) {
            System.out.println("Notifikasi : "+e);
        }     
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_BtnPrintActionPerformed

    private void BtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnPrintKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnPrintActionPerformed(null);
        }else{
            Valid.pindah(evt,Tgl2,BtnKeluar);
        }
    }//GEN-LAST:event_BtnPrintKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnPrint,Tgl1);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
    prosesCari();
}//GEN-LAST:event_btnCariActionPerformed

private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            btnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, Tgl2, BtnPrint);
        }
}//GEN-LAST:event_btnCariKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        prosesCari();
    }//GEN-LAST:event_formWindowOpened

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            btnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        prosesCari();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            TCari.setText("");
            prosesCari();
        }else{
            Valid.pindah(evt, BtnPrint, BtnKeluar);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void ChkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkInputActionPerformed
        isForm();
    }//GEN-LAST:event_ChkInputActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgEWS dialog = new DlgEWS(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.ScrollPane Bc;
    private widget.Button BtnAll;
    private widget.Button BtnKeluar;
    private widget.Button BtnPrint;
    private widget.CekBox ChkInput;
    private widget.TextBox Kd2;
    private widget.editorpane LoadHTML;
    private widget.ScrollPane Nadi;
    private javax.swing.JPanel PanelInput;
    private widget.ScrollPane Scroll;
    private widget.ScrollPane Skor;
    private widget.ScrollPane SpO2;
    private widget.ScrollPane Suhu;
    private widget.TextBox TCari;
    private javax.swing.JTabbedPane TabRawat;
    private widget.ScrollPane Tensi;
    private widget.Tanggal Tgl1;
    private widget.Tanggal Tgl2;
    private widget.Button btnCari;
    private widget.InternalFrame internalFrame1;
    private widget.InternalFrame internalFrame2;
    private widget.InternalFrame internalFrame4;
    private widget.InternalFrame internalFrame5;
    private widget.InternalFrame internalFrame6;
    private widget.InternalFrame internalFrame7;
    private widget.InternalFrame internalFrame8;
    private widget.Label jLabel6;
    private javax.swing.JPanel jPanelBc;
    private javax.swing.JPanel jPanelNadi;
    private javax.swing.JPanel jPanelSkor;
    private javax.swing.JPanel jPanelSpO2;
    private javax.swing.JPanel jPanelSuhu;
    private javax.swing.JPanel jPanelTensi;
    private widget.Label label11;
    private widget.Label label18;
    private widget.Label label9;
    private widget.panelisi panelisi1;
    // End of variables declaration//GEN-END:variables

    private  void prosesCari() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            StringBuilder htmlContent = new StringBuilder();
            htmlContent.append(                             
                "<tr class='isi'>"+
                    "<td valign='middle' bgcolor='#FFFAF8' align='center' width='5%'>Tgl.Reg</td>"+
                    "<td valign='middle' bgcolor='#FFFAF8' align='center' width='8%'>No.Rawat</td>"+
                    "<td valign='middle' bgcolor='#FFFAF8' align='center' width='4%'>No.R.M</td>"+
                    "<td valign='middle' bgcolor='#FFFAF8' align='center' width='14%'>Nama Pasien</td>"+
                    "<td valign='middle' bgcolor='#FFFAF8' align='center' width='3%'>Status</td>"+
                    "<td valign='middle' bgcolor='#FFFAF8' align='center' width='66%'>Early Warning Score</td>"+
                "</tr>"
            );     
            ps=koneksi.prepareStatement(
                    //"+noRawat+"
                "select reg_periksa.no_rawat,reg_periksa.tgl_registrasi,reg_periksa.no_rkm_medis,pasien.nm_pasien,pasien.jk,concat(reg_periksa.umurdaftar,' ',reg_periksa.sttsumur)as umur, "+
                "reg_periksa.status_lanjut from reg_periksa inner join pasien on reg_periksa.no_rkm_medis=pasien.no_rkm_medis where reg_periksa.no_rawat='"+noRawat+"' "+
                " "+(TCari.getText().trim().equals("")?"":
                "and (reg_periksa.no_rawat like ? or reg_periksa.no_rkm_medis like ? or pasien.nm_pasien like ? or reg_periksa.status_lanjut like ?)")+" order by reg_periksa.tgl_registrasi");
            try {
                if(!TCari.getText().trim().equals("")){
                    ps.setString(1,"%"+TCari.getText().trim()+"%");
                    ps.setString(2,"%"+TCari.getText().trim()+"%");
                    ps.setString(3,"%"+TCari.getText().trim()+"%");
                    ps.setString(4,"%"+TCari.getText().trim()+"%");
                }
                rs=ps.executeQuery();
                while(rs.next()){
                    htmlContent.append(
                        "<tr class='isi'>"+
                            "<td valign='middle' align='center'>"+rs.getString("tgl_registrasi")+"</td>"+
                            "<td valign='middle' align='center'>"+rs.getString("no_rawat")+"</td>"+
                            "<td valign='middle' align='center'>"+rs.getString("no_rkm_medis")+"</td>"+
                            "<td valign='middle' align='left'>"+rs.getString("nm_pasien")+" / "+rs.getString("jk")+" / "+rs.getString("umur")+"</td>"+
                            "<td valign='middle' align='center'>"+rs.getString("status_lanjut")+"</td>"+
                            "<td valign='top' align='center'>"+
                                "<table width='100%' border='0' align='center' cellpadding='2px' cellspacing='0'>");
                    try {
                        rs2=koneksi.prepareStatement(
                                "select ews_rajal.no_rawat,ews_rajal.tanggal,ews_rajal.jam,ews_rajal.nik,ews_rajal.pernafasan,ews_rajal.score_pernafasan,ews_rajal.saturasi,ews_rajal.score_saturasi,ews_rajal.alat,ews_rajal.score_alat,ews_rajal.suhu,"+
                                "ews_rajal.score_suhu,ews_rajal.denyut,ews_rajal.score_denyut,ews_rajal.tekanan,ews_rajal.score_tekanan,ews_rajal.kesadaran,ews_rajal.score_kesadaran,ews_rajal.total_score,ews_rajal.klasifikasi,ews_rajal.respon,ews_rajal.tindakan,ews_rajal.frekuensi, "+
                                "ews_rajal.skala_nyeri,ews_rajal.bb,ews_rajal.tb,ews_rajal.lk,ews_rajal.lp,ews_rajal.masuk1,ews_rajal.masuk2,ews_rajal.jumlahmasuk,ews_rajal.keluar1,ews_rajal.keluar2,ews_rajal.keluar3,ews_rajal.keluar4,ews_rajal.keluar5,ews_rajal.jumlahkeluar,ews_rajal.bc,pegawai.nama,departemen.nama "+
                                "from ews_rajal inner join pegawai on ews_rajal.nik=pegawai.nik inner join departemen on pegawai.departemen=departemen.dep_id where ews_rajal.no_rawat='"+rs.getString("no_rawat")+"' "+
                                "order by ews_rajal.tanggal,ews_rajal.jam").executeQuery();
                        if(rs2.next()){
                            htmlContent.append(
                                    "<tr class='isi'>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='7%'>Tanggal</td>"+
                                        "<td valign='middle' align='center'  width=40%' bgcolor='#FFFAF8'>Nama Pegawai</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Pernafasan</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='24%'>Saturasi Oksigen</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Penggunaan Alat Bantu O2</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Suhu</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Denyut Jantung</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Tekanan Darah Sistolik</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Kesadaran</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Total Score</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Balance Cairan(Masuk-Keluar)</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Klasifikasi</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Respon Klinis</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Tindakan</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Frekuensi Monitoring</td>"+
                                    "</tr>");
                            rs2.beforeFirst();
                            while(rs2.next()){
                                String klasifikasi="",stylee="";
                                
                                klasifikasi=Sequel.cariIsi("SELECT klasifikasi FROM ews_rajal WHERE tanggal='"+rs2.getString("tanggal")+"' and jam='"+rs2.getString("jam")+"'");
                                
                                //19960928201806045
//                                switch (klasifikasi) {
//                                    case "Tinggi":
//                                        stylee=" style=' background-color:#FFFFFF '";
//                                        break;
//                                    case "Sedang":
//                                        stylee=" style=' background-color:#FFFF00 '";
//                                        break;
//                                    case "Rendah":
//                                        stylee=" style=' background-color:#008000 '";
//                                        break;
//                                    default:
//                                        stylee=" style=' background-color:#FFFFFF '";
//                                        break;
//                                }
                                
                                if(klasifikasi.equals("Tinggi")){
                                    stylee=" style=' background-color:#DC143C '";
                                }else if(klasifikasi.equals("Sedang")){
                                    stylee=" style=' background-color:#FFD700 '";
                                }else if(klasifikasi.equals("Rendah")){
                                    stylee=" style=' background-color:#7FFF00 '";
                                }else if(klasifikasi.equals("Sangat Rendah")){
                                    stylee=" style=' background-color:#FFFFFF '";
//                                }else{
//                                    stylee=" style=' background-color:#FFFFFF '";
                                }
//                                 System.out.println("Notif Rekening : "+stylee);
//                                 System.out.println("Notif Rekening : "+rs2.getString("no_rawat"));
                                //2021/04/18/000056
                                 htmlContent.append(                             
                                    "<tr class='isi'>"+
                                        "<td align='center' "+stylee+" >"+rs2.getString("tanggal")+"<br>"+rs2.getString("jam")+"</td>"+
                                        "<td valign='top'  "+stylee+" >"+rs2.getString("nama")+"<br>"+"("+rs2.getString("departemen.nama")+")</td>"+
                                        "<td align='left' "+stylee+" >"+rs2.getString("pernafasan")+"("+rs2.getString("score_pernafasan")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("saturasi")+"("+rs2.getString("score_saturasi")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("alat")+"("+rs2.getString("score_alat")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("suhu")+"("+rs2.getString("score_suhu")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("denyut")+"("+rs2.getString("score_denyut")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("tekanan")+"("+rs2.getString("score_tekanan")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("kesadaran")+"("+rs2.getString("score_kesadaran")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("total_score")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("jumlahmasuk")+"-"+rs2.getString("jumlahkeluar")+"("+rs2.getString("bc")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("klasifikasi")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("respon")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("tindakan")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("frekuensi")+"</td>"+
                                    "</tr>"
                                 ); 
                            } 
                        }       
                    } catch (Exception e) {
                        System.out.println("Notifikasi : "+e);
                    } finally{
                        if(rs2!=null){
                            rs2.close();
                        }
                    }
                    
                    try {
                        rs2=koneksi.prepareStatement(
                                "select ews_ranap.no_rawat,ews_ranap.tanggal,ews_ranap.jam,ews_ranap.nik,ews_ranap.pernafasan,ews_ranap.score_pernafasan,ews_ranap.saturasi,ews_ranap.score_saturasi,ews_ranap.alat,ews_ranap.score_alat,ews_ranap.suhu,"+
                                "ews_ranap.score_suhu,ews_ranap.denyut,ews_ranap.score_denyut,ews_ranap.tekanan,ews_ranap.score_tekanan,ews_ranap.kesadaran,ews_ranap.score_kesadaran,ews_ranap.total_score,ews_ranap.klasifikasi,ews_ranap.respon,ews_ranap.tindakan,ews_ranap.frekuensi, "+
                                "ews_ranap.skala_nyeri,ews_ranap.bb,ews_ranap.tb,ews_ranap.lk,ews_ranap.lp,ews_ranap.masuk1,ews_ranap.masuk2,ews_ranap.jumlahmasuk,ews_ranap.keluar1,ews_ranap.keluar2,ews_ranap.keluar3,ews_ranap.keluar4,ews_ranap.keluar5,ews_ranap.jumlahkeluar,ews_ranap.bc,pegawai.nama,departemen.nama "+
                                "from ews_ranap inner join pegawai on ews_ranap.nik=pegawai.nik inner join departemen on pegawai.departemen=departemen.dep_id where ews_ranap.no_rawat='"+rs.getString("no_rawat")+"' "+
                                "order by ews_ranap.tanggal,ews_ranap.jam").executeQuery();
                        if(rs2.next()){
                            htmlContent.append(
                                    "<tr class='isi'>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='7%'>Tanggal</td>"+
                                        "<td valign='middle' align='center'  width=40%' bgcolor='#FFFAF8'>Nama Pegawai</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Pernafasan</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='24%'>Saturasi Oksigen</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Penggunaan Alat Bantu O2</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Suhu</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Denyut Jantung</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Tekanan Darah Sistolik</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Kesadaran</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Total Score</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Balance Cairan(Masuk-Keluar)</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Klasifikasi</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Respon Klinis</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Tindakan</td>"+
                                        "<td valign='middle' bgcolor='#FFFFF8' align='center' width='23%'>Frekuensi Monitoring</td>"+
                                    "</tr>");
                            rs2.beforeFirst();
                            while(rs2.next()){
                                String klasifikasi="",stylee="";
                                
                                klasifikasi=Sequel.cariIsi("SELECT klasifikasi FROM ews_ranap WHERE tanggal='"+rs2.getString("tanggal")+"' and jam='"+rs2.getString("jam")+"'");
                                
                                //19960928201806045
//                                switch (klasifikasi) {
//                                    case "Tinggi":
//                                        stylee=" style=' background-color:#FFFFFF '";
//                                        break;
//                                    case "Sedang":
//                                        stylee=" style=' background-color:#FFFF00 '";
//                                        break;
//                                    case "Rendah":
//                                        stylee=" style=' background-color:#008000 '";
//                                        break;
//                                    default:
//                                        stylee=" style=' background-color:#FFFFFF '";
//                                        break;
//                                }
                                
                                if(klasifikasi.equals("Tinggi")){
                                    stylee=" style=' background-color:#DC143C '";
                                }else if(klasifikasi.equals("Sedang")){
                                    stylee=" style=' background-color:#FFD700 '";
                                }else if(klasifikasi.equals("Rendah")){
                                    stylee=" style=' background-color:#7FFF00 '";
                                }else if(klasifikasi.equals("Sangat Rendah")){
                                    stylee=" style=' background-color:#FFFFFF '";
//                                }else{
//                                    stylee=" style=' background-color:#FFFFFF '";
                                }
//                                 System.out.println("Notif Rekening : "+stylee);
//                                 System.out.println("Notif Rekening : "+rs2.getString("nik"));
                                //2021/04/18/000056
                                 htmlContent.append(                             
                                    "<tr class='isi'  >"+
                                        "<td align='center' "+stylee+" >"+rs2.getString("tanggal")+"<br>"+rs2.getString("jam")+"</td>"+
                                        "<td valign='top'  "+stylee+" >"+rs2.getString("nama")+"<br>"+"("+rs2.getString("departemen.nama")+")</td>"+
                                        "<td align='left' "+stylee+" >"+rs2.getString("pernafasan")+"("+rs2.getString("score_pernafasan")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("saturasi")+"("+rs2.getString("score_saturasi")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("alat")+"("+rs2.getString("score_alat")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("suhu")+"("+rs2.getString("score_suhu")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("denyut")+"("+rs2.getString("score_denyut")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("tekanan")+"("+rs2.getString("score_tekanan")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("kesadaran")+"("+rs2.getString("score_kesadaran")+")</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("total_score")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("jumlahmasuk")+"-"+rs2.getString("jumlahkeluar")+"("+rs2.getString("bc")+")</td>"+        
                                        "<td align='left' "+stylee+">"+rs2.getString("klasifikasi")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("respon")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("tindakan")+"</td>"+
                                        "<td align='left' "+stylee+">"+rs2.getString("frekuensi")+"</td>"+
                                    "</tr>"
                                        // rs2.getString("diastol")+
                                 ); 
                            } 
                        }       
                    } catch (Exception e) {
                        System.out.println("Notifikasi : "+e);
                    } finally{
                        if(rs2!=null){
                            rs2.close();
                        }
                    }
                    htmlContent.append(
                                "</table>"+
                            "</td>"+
                        "</tr>"
                    );
                }
            } catch (Exception e) {
                System.out.println("Notif : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
            
            LoadHTML.setText(
                    "<html>"+
                      "<table width='100%' border='0' align='center' cellpadding='3px' cellspacing='0' class='tbl_form'>"+
                       htmlContent.toString()+
                      "</table>"+
                    "</html>");
        } catch (Exception e) {
            System.out.println("laporan.DlgRL4A.prosesCari() 5 : "+e);
        } 
        this.setCursor(Cursor.getDefaultCursor());
        
    }
    
    public void isCek(){
        BtnPrint.setEnabled(akses.getharian_klasifikasi_pasien_ranap());
    }
    
    public void setNoRawat(String x,String y)
    {
        this.noRawat=x;
        TCari.setText(y);
        prosesCari();
        JPanel chartPanelSuhu = createPanelSuhu(x);
        jPanelSuhu.add(chartPanelSuhu);
         JPanel chartPanelSpO2 = createPanelSpO2(x);
        jPanelSpO2.add(chartPanelSpO2);
        JPanel chartPanelTensi = createPanelTensi(x);
        jPanelTensi.add(chartPanelTensi);
        JPanel chartPanelSkor = createPanelSkor(x);
        jPanelSkor.add(chartPanelSkor);
        JPanel chartPanelBc = createPanelBc(x);
        jPanelBc.add(chartPanelBc);
        JPanel chartPanelNadi = createPanelNadi(x);
        jPanelNadi.add(chartPanelNadi);
    }

    public void tampil() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public static JPanel createPanelSuhu(String noRawat) {
             JFreeChart chart = createChartSuhu(noRawat);
             return new ChartPanel(chart);
         }
    
    public static JPanel createPanelSpO2(String noRawat) {
             JFreeChart chart = createChartSpO2(noRawat);
             return new ChartPanel(chart);
         }
    
    public static JPanel createPanelTensi(String noRawat) {
             JFreeChart chart = createChartTensi(noRawat);
             return new ChartPanel(chart);
         }
    
    public static JPanel createPanelSkor(String noRawat) {
             JFreeChart chart = createChartSkor(noRawat);
             return new ChartPanel(chart);
         }
    
    public static JPanel createPanelBc(String noRawat) {
             JFreeChart chart = createChartBc(noRawat);
             return new ChartPanel(chart);
         }
    
    public static JPanel createPanelNadi(String noRawat) {
             JFreeChart chart = createChartNadi(noRawat);
             return new ChartPanel(chart);
         }
    
    private static JFreeChart createChartSuhu(String noRawat) {

             CategoryDataset datasetSuhu = createDatasetSuhu(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("Suhu °C");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
             rangeAxis1.setRange(35,42);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
             CategoryPlot subplot1 = new CategoryPlot(datasetSuhu, null, rangeAxis1,
                     renderer1);
             
             subplot1.setDomainGridlinesVisible(true);
             CategoryAxis domainAxis = new CategoryAxis("");
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
             return result;

         }
    
    private static JFreeChart createChartSpO2(String noRawat) {

             CategoryDataset datasetSpO2 = createDatasetSpO2(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("%");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
             rangeAxis1.setRange(30,100);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
             CategoryPlot subplot1 = new CategoryPlot(datasetSpO2, null, rangeAxis1,
                     renderer1);
             subplot1.setDomainGridlinesVisible(true);
             CategoryAxis domainAxis = new CategoryAxis("");
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
            
             return result;

         }   
    
    private static JFreeChart createChartTensi(String noRawat) {

             CategoryDataset datasetTensi = createDatasetTensi(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("mmHg");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
              rangeAxis1.setAutoRangeIncludesZero(true);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
            
             CategoryPlot subplot1 = new CategoryPlot(datasetTensi, null, rangeAxis1,
                     renderer1);
             subplot1.setDomainGridlinesVisible(true);
             
             CategoryAxis domainAxis = new CategoryAxis("");
             
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
             return result;

         }  
    
    private static JFreeChart createChartSkor(String noRawat) {

             CategoryDataset datasetSkor = createDatasetSkor(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("Range");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
              rangeAxis1.setAutoRangeIncludesZero(true);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
            
             CategoryPlot subplot1 = new CategoryPlot(datasetSkor, null, rangeAxis1,
                     renderer1);
             subplot1.setDomainGridlinesVisible(true);
             
             CategoryAxis domainAxis = new CategoryAxis("");
             
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
             return result;

         } 
    
    private static JFreeChart createChartBc(String noRawat) {

             CategoryDataset datasetBc = createDatasetBc(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("cc");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
              rangeAxis1.setAutoRangeIncludesZero(true);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
            
             CategoryPlot subplot1 = new CategoryPlot(datasetBc, null, rangeAxis1,
                     renderer1);
             subplot1.setDomainGridlinesVisible(true);
             
             CategoryAxis domainAxis = new CategoryAxis("");
             
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
             return result;

         } 
    
     private static JFreeChart createChartNadi(String noRawat) {

             CategoryDataset datasetNadi = createDatasetNadi(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("x/menit");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
              rangeAxis1.setAutoRangeIncludesZero(true);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
            
             CategoryPlot subplot1 = new CategoryPlot(datasetNadi, null, rangeAxis1,
                     renderer1);
             subplot1.setDomainGridlinesVisible(true);
             
             CategoryAxis domainAxis = new CategoryAxis("");
             
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
             return result;

         } 
     
     public static CategoryDataset createDatasetSuhu(String noRawat) { //data grafik nilai K dan D

          DefaultCategoryDataset result = new DefaultCategoryDataset();
          String series1 = "Grafik Suhu (°C)";

            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,suhu "+
                   "from ews_rajal where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                    String tksbr=rs2.getString(1);
                    double field2=rs2.getDouble(2);
                    result.addValue(field2, series1,tksbr);
                }
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,suhu "+
                   "from ews_ranap where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString(1);
                    double field2=rs.getDouble(2);
                    result.addValue(field2, series1,tksbr);
                }
                 
            } catch (SQLException e) {
                System.out.println("Notifikasi : " + e);
            }
            return result;
       }
     
     public static CategoryDataset createDatasetSpO2(String noRawat) { //data grafik nilai K dan D

          DefaultCategoryDataset result = new DefaultCategoryDataset();
          String series1 = "Grafik SpO2 (%)";

            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,saturasi "+
                   "from ews_rajal where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString(1);
                    double field2=rs.getDouble(2);
                    result.addValue(field2, series1,tksbr);
                }
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,saturasi "+
                   "from ews_ranap where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                    String tksbr=rs2.getString(1);
                    double field2=rs2.getDouble(2);
                    result.addValue(field2, series1,tksbr);
                }
            } catch (SQLException e) {
                System.out.println("Notifikasi : " + e);
            }
            return result;
       }
     
     public static CategoryDataset createDatasetTensi(String noRawat) { //data grafik nilai K dan D

          DefaultCategoryDataset result = new DefaultCategoryDataset();
          String series1 = "Grafik Tensi Sistole(mmHg)";
          //String series2 = "Grafik Tensi Diastole(mmHg)";

            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,tekanan "+
                   "from ews_rajal where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString("period");
                    double sistol=rs.getDouble("tekanan");
                    //double diastol=rs.getDouble("diastol");
                    result.addValue(sistol, series1,tksbr);
                   // result.addValue(diastol, series2,tksbr);
                }
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,tekanan "+
                   "from ews_ranap where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                    String tksbr=rs2.getString("period");
                    double sistol=rs2.getDouble("tekanan");
                    //double diastol=rs2.getDouble("diastol");
                    result.addValue(sistol, series1,tksbr);
                    //result.addValue(diastol, series2,tksbr);
                }
            } catch (SQLException e) {
                System.out.println("Notifikasi : " + e);
            }
            return result;
       }
     
     public static CategoryDataset createDatasetSkor(String noRawat) { //data grafik nilai K dan D

          DefaultCategoryDataset result = new DefaultCategoryDataset();
          String series1 = "Grafik Skor";
            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,total_score "+
                   "from ews_rajal where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString("period");
                    double skor=rs.getDouble("total_score");
                    result.addValue(skor, series1,tksbr);
                }
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,total_score "+
                   "from ews_ranap where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                    String tksbr=rs2.getString("period");
                    double skor=rs2.getDouble("total_score");
                    result.addValue(skor, series1,tksbr);
                }
            } catch (SQLException e) {
                System.out.println("Notifikasi Q: " + e);
            }
            return result;
       }
     
     public static CategoryDataset createDatasetBc(String noRawat) { //data grafik nilai K dan D

          DefaultCategoryDataset result = new DefaultCategoryDataset();
          String series1 = "Grafik Cairan Masuk";
           String series2 = "Grafik Cairan Keluar";
           String series3 = "Grafik Balance Cairan";
            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,jumlahmasuk,jumlahkeluar,bc "+
                   "from ews_rajal where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString("period");
                    double jumlahmasuk=rs.getDouble("jumlahmasuk");
                    double jumlahkeluar=rs.getDouble("jumlahkeluar");
                    double bc=rs.getDouble("bc");
                    result.addValue(jumlahmasuk, series1,tksbr);
                    result.addValue(jumlahkeluar, series2,tksbr);
//                    result.addValue(bc, series3,tksbr);
                }
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,jumlahmasuk,jumlahkeluar,bc "+
                   "from ews_ranap where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                   String tksbr=rs2.getString("period");
                    double jumlahmasuk=rs2.getDouble("jumlahmasuk");
                    double jumlahkeluar=rs2.getDouble("jumlahkeluar");
                    double bc=rs2.getDouble("bc");
                    result.addValue(jumlahmasuk, series1,tksbr);
                    result.addValue(jumlahkeluar, series2,tksbr);
//                    result.addValue(bc, series3,tksbr);
                }
            } catch (SQLException e) {
                System.out.println("Notifikasi Q: " + e);
            }
            return result;
       }
     
      public static CategoryDataset createDatasetNadi(String noRawat) { //data grafik nilai K dan D

          DefaultCategoryDataset result = new DefaultCategoryDataset();
          String series1 = "Grafik Denyut Jantung";
            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,denyut "+
                   "from ews_rajal where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString("period");
                    double skor=rs.getDouble("denyut");
                    result.addValue(skor, series1,tksbr);
                }
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,denyut "+
                   "from ews_ranap where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                    String tksbr=rs2.getString("period");
                    double skor=rs2.getDouble("denyut");
                    result.addValue(skor, series1,tksbr);
                }
            } catch (SQLException e) {
                System.out.println("Notifikasi Q: " + e);
            }
            return result;
       }
      
    private void isForm(){
        if(ChkInput.isSelected()==true){
            ChkInput.setVisible(false);
            PanelInput.setPreferredSize(new Dimension(WIDTH,this.getHeight()-160)); 
            ChkInput.setText(".: Min Tampilan Grafik :.");
            ChkInput.setVisible(true);
        }else if(ChkInput.isSelected()==false){           
            ChkInput.setVisible(false);            
            PanelInput.setPreferredSize(new Dimension(WIDTH,220)); 
            ChkInput.setText(".: Max Tampilan Grafik :.");
            ChkInput.setVisible(true);
        }
    }
    
}
